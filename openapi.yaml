openapi: 3.1.0
info:
  title: Limelight API
  version: 1.0.73
  x-forms.spectacular_extensions.TypedConfigFieldExtension:
    x-badges:
    - label: Custom Field
  description: Limelight manages your theatre production process from auditions to
    bump out.
paths:
  /:
    get:
      operationId: root_retrieve
      security:
      - CadenceSession: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerMeta'
          description: ''
  /api/assets/v1/assets/:
    get:
      operationId: assets_v1_assets_list
      description: Retrieve a list of all assets in the system.
      summary: List all assets
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - assets
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetList'
          description: ''
    post:
      operationId: assets_v1_assets_create
      description: Add a new asset to the system.
      summary: Create a new asset
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: ''
  /api/assets/v1/assets/{asset_id}/assignments/:
    get:
      operationId: assets_v1_assets_assignments_list
      description: Retrieve a list of all assignments associated with a specific asset.
      summary: List all assignments for an asset
      parameters:
      - in: path
        name: asset_id
        schema:
          type: integer
        description: Asset ID
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - assets
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssignmentList'
          description: ''
    post:
      operationId: assets_v1_assets_assignments_create
      description: Add a new assignment to a specific asset.
      summary: Create a new assignment for an asset
      parameters:
      - in: path
        name: asset_id
        schema:
          type: integer
        description: Asset ID
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
  /api/assets/v1/assets/{asset_id}/assignments/{id}/:
    get:
      operationId: assets_v1_assets_assignments_retrieve
      description: Get detailed information about a specific assignment by its ID.
      summary: Retrieve a specific assignment
      parameters:
      - in: path
        name: asset_id
        schema:
          type: integer
        description: Asset ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Assignment ID
        required: true
      tags:
      - assets
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    put:
      operationId: assets_v1_assets_assignments_update
      description: Modify the details of an existing assignment by its ID.
      summary: Update an existing assignment
      parameters:
      - in: path
        name: asset_id
        schema:
          type: integer
        description: Asset ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Assignment ID
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    patch:
      operationId: assets_v1_assets_assignments_partial_update
      description: Update specific fields of an existing assignment without affecting
        others.
      summary: Partially update an assignment
      parameters:
      - in: path
        name: asset_id
        schema:
          type: integer
        description: Asset ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Assignment ID
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssignment'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
          description: ''
    delete:
      operationId: assets_v1_assets_assignments_destroy
      description: Remove an assignment from the system by its ID.
      summary: Delete an assignment
      parameters:
      - in: path
        name: asset_id
        schema:
          type: integer
        description: Asset ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Assignment ID
        required: true
      tags:
      - assets
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/assets/v1/assets/{id}/:
    get:
      operationId: assets_v1_assets_retrieve
      description: Get detailed information about a specific asset by its ID.
      summary: Retrieve a specific asset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Asset ID
        required: true
      tags:
      - assets
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: ''
    put:
      operationId: assets_v1_assets_update
      description: Modify the details of an existing asset by its ID.
      summary: Update an existing asset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Asset ID
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: ''
    patch:
      operationId: assets_v1_assets_partial_update
      description: Update specific fields of an existing asset without affecting others.
      summary: Partially update an asset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Asset ID
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAsset'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: ''
    delete:
      operationId: assets_v1_assets_destroy
      description: Remove an asset from the system by its ID.
      summary: Delete an asset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Asset ID
        required: true
      tags:
      - assets
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auditions/v1/auditions/:
    get:
      operationId: auditions_v1_auditions_list
      description: Retrieve all auditions for productions.
      summary: List Auditions
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditionList'
          description: ''
    post:
      operationId: auditions_v1_auditions_create
      description: Create a new audition for a production.
      summary: Create an Audition
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audition'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audition'
          description: ''
  /api/auditions/v1/auditions/{audition_id}/slots/:
    get:
      operationId: auditions_v1_auditions_slots_list
      description: Retrieve all slots for a specific audition.
      summary: List Slots for an Audition
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlotList'
          description: ''
    post:
      operationId: auditions_v1_auditions_slots_create
      description: Create a new slot for a specific audition.
      summary: Create a Slot
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
  /api/auditions/v1/auditions/{audition_id}/slots/{id}/:
    get:
      operationId: auditions_v1_auditions_slots_retrieve
      description: Get details of a specific slot for an audition.
      summary: Retrieve a Slot
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Slot.
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
    put:
      operationId: auditions_v1_auditions_slots_update
      description: Update an existing slot for a specific audition.
      summary: Update a Slot
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Slot.
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Slot'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
    patch:
      operationId: auditions_v1_auditions_slots_partial_update
      description: Partially update an existing slot for a specific audition.
      summary: Partially Update a Slot
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Slot.
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlot'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slot'
          description: ''
    delete:
      operationId: auditions_v1_auditions_slots_destroy
      description: Delete a specific slot for an audition.
      summary: Delete a Slot
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Slot.
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auditions/v1/auditions/{audition_id}/slots/{slot_id}/signups/:
    get:
      operationId: auditions_v1_auditions_slots_signups_list
      description: Retrieve all signups for a specific slot in an audition.
      summary: List Signups for a Slot
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSignupList'
          description: ''
    post:
      operationId: auditions_v1_auditions_slots_signups_create
      description: Create a new signup for a specific slot in an audition.
      summary: Create a Signup
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'
          description: ''
  /api/auditions/v1/auditions/{audition_id}/slots/{slot_id}/signups/{id}/:
    get:
      operationId: auditions_v1_auditions_slots_signups_retrieve
      description: Get details of a specific signup for a slot in an audition.
      summary: Retrieve a Signup
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signup.
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'
          description: ''
    put:
      operationId: auditions_v1_auditions_slots_signups_update
      description: Update an existing signup for a specific slot in an audition.
      summary: Update a Signup
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signup.
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'
          description: ''
    patch:
      operationId: auditions_v1_auditions_slots_signups_partial_update
      description: Partially update an existing signup for a specific slot in an audition.
      summary: Partially Update a Signup
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signup.
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSignup'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signup'
          description: ''
    delete:
      operationId: auditions_v1_auditions_slots_signups_destroy
      description: Delete a specific signup for a slot in an audition.
      summary: Delete a Signup
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Signup.
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auditions/v1/auditions/{audition_id}/slots/{slot_id}/signups/{signup_id}/feedback/:
    get:
      operationId: auditions_v1_auditions_slots_signups_feedback_list
      description: Retrieve all feedback for a specific signup in an audition slot.
      summary: List Feedback for a Signup
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedbackList'
          description: ''
    post:
      operationId: auditions_v1_auditions_slots_signups_feedback_create
      description: Create new feedback for a specific signup in an audition slot.
      summary: Create Feedback
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
  /api/auditions/v1/auditions/{audition_id}/slots/{slot_id}/signups/{signup_id}/feedback/{id}/:
    get:
      operationId: auditions_v1_auditions_slots_signups_feedback_retrieve
      description: Get details of specific feedback for a signup in an audition slot.
      summary: Retrieve Feedback
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the feedback
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    put:
      operationId: auditions_v1_auditions_slots_signups_feedback_update
      description: Update existing feedback for a specific signup in an audition slot.
      summary: Update Feedback
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the feedback
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    patch:
      operationId: auditions_v1_auditions_slots_signups_feedback_partial_update
      description: Partially update existing feedback for a specific signup in an
        audition slot.
      summary: Partially Update Feedback
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the feedback
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedback'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
    delete:
      operationId: auditions_v1_auditions_slots_signups_feedback_destroy
      description: Delete specific feedback for a signup in an audition slot.
      summary: Delete Feedback
      parameters:
      - in: path
        name: audition_id
        schema:
          type: integer
        description: ID of the audition
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the feedback
        required: true
      - in: path
        name: signup_id
        schema:
          type: integer
        description: ID of the signup
        required: true
      - in: path
        name: slot_id
        schema:
          type: integer
        description: ID of the slot
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/auditions/v1/auditions/{id}/:
    get:
      operationId: auditions_v1_auditions_retrieve
      description: Get details of a specific audition.
      summary: Retrieve an Audition
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Audition.
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID of the audition
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audition'
          description: ''
    put:
      operationId: auditions_v1_auditions_update
      description: Update an existing audition.
      summary: Update an Audition
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Audition.
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID of the audition
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audition'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audition'
          description: ''
    patch:
      operationId: auditions_v1_auditions_partial_update
      description: Partially update an existing audition.
      summary: Partially Update an Audition
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Audition.
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID of the audition
        required: true
      tags:
      - auditions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAudition'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audition'
          description: ''
    delete:
      operationId: auditions_v1_auditions_destroy
      description: Delete a specific audition.
      summary: Delete an Audition
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Audition.
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID of the audition
        required: true
      tags:
      - auditions
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/cost-categories/:
    get:
      operationId: budgeting_v1_cost_categories_list
      description: Retrieve a list of all cost categories in the system.
      summary: List all cost categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCostCategoryList'
          description: ''
    post:
      operationId: budgeting_v1_cost_categories_create
      description: Add a new cost category to the system.
      summary: Create a new cost category
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCategory'
          description: ''
  /api/budgeting/v1/cost-categories/{id}/:
    get:
      operationId: budgeting_v1_cost_categories_retrieve
      description: Get detailed information about a specific cost category by its
        ID.
      summary: Retrieve a specific cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cost Category.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCategory'
          description: ''
    put:
      operationId: budgeting_v1_cost_categories_update
      description: Modify the details of an existing cost category by its ID.
      summary: Update an existing cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cost Category.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCategory'
          description: ''
    patch:
      operationId: budgeting_v1_cost_categories_partial_update
      description: Update specific fields of an existing cost category without affecting
        others.
      summary: Partially update a cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cost Category.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCostCategory'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCategory'
          description: ''
    delete:
      operationId: budgeting_v1_cost_categories_destroy
      description: Remove a cost category from the system by its ID.
      summary: Delete a cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Cost Category.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/expenses/:
    get:
      operationId: budgeting_v1_expenses_list
      description: Retrieve a list of all expenses in the system.
      summary: List all expenses
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseList'
          description: ''
    post:
      operationId: budgeting_v1_expenses_create
      description: Add a new expense to the system.
      summary: Create a new expense
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
  /api/budgeting/v1/expenses/{expense_id}/attachments/:
    get:
      operationId: budgeting_v1_expenses_attachments_list
      description: Retrieve a list of all attachments associated with a specific expense.
      summary: List all attachments for an expense
      parameters:
      - in: path
        name: expense_id
        schema:
          type: integer
        description: Expense ID
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExpenseAttachmentList'
          description: ''
    post:
      operationId: budgeting_v1_expenses_attachments_create
      description: Add a new attachment to a specific expense.
      summary: Create a new attachment for an expense
      parameters:
      - in: path
        name: expense_id
        schema:
          type: integer
        description: Expense ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseAttachment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseAttachment'
          description: ''
  /api/budgeting/v1/expenses/{expense_id}/attachments/{id}/:
    get:
      operationId: budgeting_v1_expenses_attachments_retrieve
      description: Get detailed information about a specific attachment by its ID.
      summary: Retrieve a specific attachment
      parameters:
      - in: path
        name: expense_id
        schema:
          type: integer
        description: Expense ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense Attachment.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseAttachment'
          description: ''
    put:
      operationId: budgeting_v1_expenses_attachments_update
      description: Modify the details of an existing attachment by its ID.
      summary: Update an existing attachment
      parameters:
      - in: path
        name: expense_id
        schema:
          type: integer
        description: Expense ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense Attachment.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseAttachment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseAttachment'
          description: ''
    patch:
      operationId: budgeting_v1_expenses_attachments_partial_update
      description: Update specific fields of an existing attachment without affecting
        others.
      summary: Partially update an attachment
      parameters:
      - in: path
        name: expense_id
        schema:
          type: integer
        description: Expense ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense Attachment.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpenseAttachment'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseAttachment'
          description: ''
    delete:
      operationId: budgeting_v1_expenses_attachments_destroy
      description: Remove an attachment from the system by its ID.
      summary: Delete an attachment
      parameters:
      - in: path
        name: expense_id
        schema:
          type: integer
        description: Expense ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense Attachment.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/expenses/{id}/:
    get:
      operationId: budgeting_v1_expenses_retrieve
      description: Get detailed information about a specific expense by its ID.
      summary: Retrieve a specific expense
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    put:
      operationId: budgeting_v1_expenses_update
      description: Modify the details of an existing expense by its ID.
      summary: Update an existing expense
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    patch:
      operationId: budgeting_v1_expenses_partial_update
      description: Update specific fields of an existing expense without affecting
        others.
      summary: Partially update an expense
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpense'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: budgeting_v1_expenses_destroy
      description: Remove an expense from the system by its ID.
      summary: Delete an expense
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Expense.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/income-categories/:
    get:
      operationId: budgeting_v1_income_categories_list
      description: Retrieve a list of all income categories in the system.
      summary: List all income categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncomeCategoryList'
          description: ''
    post:
      operationId: budgeting_v1_income_categories_create
      description: Add a new income category to the system.
      summary: Create a new income category
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeCategory'
          description: ''
  /api/budgeting/v1/income-categories/{id}/:
    get:
      operationId: budgeting_v1_income_categories_retrieve
      description: Get detailed information about a specific income category by its
        ID.
      summary: Retrieve a specific income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income Category.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeCategory'
          description: ''
    put:
      operationId: budgeting_v1_income_categories_update
      description: Modify the details of an existing income category by its ID.
      summary: Update an existing income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income Category.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeCategory'
          description: ''
    patch:
      operationId: budgeting_v1_income_categories_partial_update
      description: Update specific fields of an existing income category without affecting
        others.
      summary: Partially update an income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income Category.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncomeCategory'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeCategory'
          description: ''
    delete:
      operationId: budgeting_v1_income_categories_destroy
      description: Remove an income category from the system by its ID.
      summary: Delete an income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income Category.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/incomes/:
    get:
      operationId: budgeting_v1_incomes_list
      description: Retrieve a list of all incomes in the system, optionally filtered
        by category.
      summary: List all incomes
      parameters:
      - in: query
        name: category
        schema:
          type: string
        description: Filter by income category
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncomeList'
          description: ''
    post:
      operationId: budgeting_v1_incomes_create
      description: Add a new income to the system.
      summary: Create a new income
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
  /api/budgeting/v1/incomes/{id}/:
    get:
      operationId: budgeting_v1_incomes_retrieve
      description: Get detailed information about a specific income by its ID.
      summary: Retrieve a specific income
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    put:
      operationId: budgeting_v1_incomes_update
      description: Modify the details of an existing income by its ID.
      summary: Update an existing income
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    patch:
      operationId: budgeting_v1_incomes_partial_update
      description: Update specific fields of an existing income without affecting
        others.
      summary: Partially update an income
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncome'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
          description: ''
    delete:
      operationId: budgeting_v1_incomes_destroy
      description: Remove an income from the system by its ID.
      summary: Delete an income
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Income.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/productions/{production_id}/cost-categories/:
    get:
      operationId: budgeting_v1_productions_cost_categories_list
      description: Retrieve a list of all production cost categories for a specific
        production.
      summary: List all production cost categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionCostCategoryList'
          description: ''
    post:
      operationId: budgeting_v1_productions_cost_categories_create
      description: Add a new production cost category to the system.
      summary: Create a new production cost category
      parameters:
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCostCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCostCategory'
          description: ''
  /api/budgeting/v1/productions/{production_id}/cost-categories/{id}/:
    get:
      operationId: budgeting_v1_productions_cost_categories_retrieve
      description: Get detailed information about a specific production cost category
        by its ID.
      summary: Retrieve a specific production cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Cost Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCostCategory'
          description: ''
    put:
      operationId: budgeting_v1_productions_cost_categories_update
      description: Modify the details of an existing production cost category by its
        ID.
      summary: Update an existing production cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Cost Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCostCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCostCategory'
          description: ''
    patch:
      operationId: budgeting_v1_productions_cost_categories_partial_update
      description: Update specific fields of an existing production cost category
        without affecting others.
      summary: Partially update a production cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Cost Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionCostCategory'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCostCategory'
          description: ''
    delete:
      operationId: budgeting_v1_productions_cost_categories_destroy
      description: Remove a production cost category from the system by its ID.
      summary: Delete a production cost category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Cost Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/productions/{production_id}/income-categories/:
    get:
      operationId: budgeting_v1_productions_income_categories_list
      description: Retrieve a list of all income categories for a specific production.
      summary: List all production income categories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionIncomeCategoryList'
          description: ''
    post:
      operationId: budgeting_v1_productions_income_categories_create
      description: Add a new production income category to the system.
      summary: Create a new production income category
      parameters:
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionIncomeCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIncomeCategory'
          description: ''
  /api/budgeting/v1/productions/{production_id}/income-categories/{id}/:
    get:
      operationId: budgeting_v1_productions_income_categories_retrieve
      description: Get detailed information about a specific production income category
        by its ID.
      summary: Retrieve a specific production income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Income Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIncomeCategory'
          description: ''
    put:
      operationId: budgeting_v1_productions_income_categories_update
      description: Modify the details of an existing production income category by
        its ID.
      summary: Update an existing production income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Income Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionIncomeCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIncomeCategory'
          description: ''
    patch:
      operationId: budgeting_v1_productions_income_categories_partial_update
      description: Update specific fields of an existing production income category
        without affecting others.
      summary: Partially update a production income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Income Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionIncomeCategory'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionIncomeCategory'
          description: ''
    delete:
      operationId: budgeting_v1_productions_income_categories_destroy
      description: Remove a production income category from the system by its ID.
      summary: Delete a production income category
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Income Category.
        required: true
      - in: path
        name: production_id
        schema:
          type: integer
        description: Production ID
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/reimbursements/:
    get:
      operationId: budgeting_v1_reimbursements_list
      description: Retrieve a list of all reimbursements in the system.
      summary: List all reimbursements
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReimbursementList'
          description: ''
    post:
      operationId: budgeting_v1_reimbursements_create
      description: Add a new reimbursement to the system.
      summary: Create a new reimbursement
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reimbursement'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reimbursement'
          description: ''
  /api/budgeting/v1/reimbursements/{id}/:
    get:
      operationId: budgeting_v1_reimbursements_retrieve
      description: Get detailed information about a specific reimbursement by its
        ID.
      summary: Retrieve a specific reimbursement
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reimbursement.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reimbursement'
          description: ''
    put:
      operationId: budgeting_v1_reimbursements_update
      description: Modify the details of an existing reimbursement by its ID.
      summary: Update an existing reimbursement
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reimbursement.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reimbursement'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reimbursement'
          description: ''
    patch:
      operationId: budgeting_v1_reimbursements_partial_update
      description: Update specific fields of an existing reimbursement without affecting
        others.
      summary: Partially update a reimbursement
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reimbursement.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReimbursement'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reimbursement'
          description: ''
    delete:
      operationId: budgeting_v1_reimbursements_destroy
      description: Remove a reimbursement from the system by its ID.
      summary: Delete a reimbursement
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Reimbursement.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/budgeting/v1/vendors/:
    get:
      operationId: budgeting_v1_vendors_list
      description: Retrieve a list of all vendors in the system.
      summary: List all vendors
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVendorList'
          description: ''
    post:
      operationId: budgeting_v1_vendors_create
      description: Add a new vendor to the system.
      summary: Create a new vendor
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
  /api/budgeting/v1/vendors/{id}/:
    get:
      operationId: budgeting_v1_vendors_retrieve
      description: Get detailed information about a specific vendor by its ID.
      summary: Retrieve a specific vendor
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vendor.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    put:
      operationId: budgeting_v1_vendors_update
      description: Modify the details of an existing vendor by its ID.
      summary: Update an existing vendor
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vendor.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vendor'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    patch:
      operationId: budgeting_v1_vendors_partial_update
      description: Update specific fields of an existing vendor without affecting
        others.
      summary: Partially update a vendor
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vendor.
        required: true
      tags:
      - budgeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVendor'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vendor'
          description: ''
    delete:
      operationId: budgeting_v1_vendors_destroy
      description: Remove a vendor from the system by its ID.
      summary: Delete a vendor
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vendor.
        required: true
      tags:
      - budgeting
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/auditlogs/:
    get:
      operationId: compliance_auditlogs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuditLogList'
          description: ''
    post:
      operationId: compliance_auditlogs_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLog'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
  /api/compliance/auditlogs/{id}/:
    get:
      operationId: compliance_auditlogs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
    put:
      operationId: compliance_auditlogs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLog'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
    patch:
      operationId: compliance_auditlogs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuditLog'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
          description: ''
    delete:
      operationId: compliance_auditlogs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audit log.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/contextkeys/:
    get:
      operationId: compliance_contextkeys_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContextKeyList'
          description: ''
    post:
      operationId: compliance_contextkeys_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextKey'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextKey'
          description: ''
  /api/compliance/contextkeys/{id}/:
    get:
      operationId: compliance_contextkeys_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context key.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextKey'
          description: ''
    put:
      operationId: compliance_contextkeys_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context key.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextKey'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextKey'
          description: ''
    patch:
      operationId: compliance_contextkeys_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context key.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContextKey'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextKey'
          description: ''
    delete:
      operationId: compliance_contextkeys_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context key.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/contexts/:
    get:
      operationId: compliance_contexts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContextList'
          description: ''
    post:
      operationId: compliance_contexts_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Context'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: ''
  /api/compliance/contexts/{id}/:
    get:
      operationId: compliance_contexts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: ''
    put:
      operationId: compliance_contexts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Context'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: ''
    patch:
      operationId: compliance_contexts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContext'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: ''
    delete:
      operationId: compliance_contexts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this context.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/permissions/:
    get:
      operationId: compliance_permissions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: compliance_permissions_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/compliance/permissions/{id}/:
    get:
      operationId: compliance_permissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    put:
      operationId: compliance_permissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    patch:
      operationId: compliance_permissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPermission'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: compliance_permissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/rolepermissions/:
    get:
      operationId: compliance_rolepermissions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRolePermissionList'
          description: ''
    post:
      operationId: compliance_rolepermissions_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermission'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermission'
          description: ''
  /api/compliance/rolepermissions/{id}/:
    get:
      operationId: compliance_rolepermissions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role permission.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermission'
          description: ''
    put:
      operationId: compliance_rolepermissions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role permission.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermission'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermission'
          description: ''
    patch:
      operationId: compliance_rolepermissions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role permission.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRolePermission'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermission'
          description: ''
    delete:
      operationId: compliance_rolepermissions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role permission.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/roles/:
    get:
      operationId: compliance_roles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleList'
          description: ''
    post:
      operationId: compliance_roles_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
  /api/compliance/roles/{id}/:
    get:
      operationId: compliance_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    put:
      operationId: compliance_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    patch:
      operationId: compliance_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRole'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: ''
    delete:
      operationId: compliance_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this role.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/compliance/userroleassignments/:
    get:
      operationId: compliance_userroleassignments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserRoleAssignmentList'
          description: ''
    post:
      operationId: compliance_userroleassignments_create
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleAssignment'
          description: ''
  /api/compliance/userroleassignments/{id}/:
    get:
      operationId: compliance_userroleassignments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user role assignment.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleAssignment'
          description: ''
    put:
      operationId: compliance_userroleassignments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user role assignment.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleAssignment'
          description: ''
    patch:
      operationId: compliance_userroleassignments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user role assignment.
        required: true
      tags:
      - compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRoleAssignment'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleAssignment'
          description: ''
    delete:
      operationId: compliance_userroleassignments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user role assignment.
        required: true
      tags:
      - compliance
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/v1/repos/:
    get:
      operationId: documents_v1_repos_list
      description: Retrieve a list of all document repositories in the system.
      summary: List all document repositories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentRepoList'
          description: ''
    post:
      operationId: documents_v1_repos_create
      description: Add a new document repository to the system.
      summary: Create a new document repository
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRepo'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRepo'
          description: ''
  /api/documents/v1/repos/{id}/:
    get:
      operationId: documents_v1_repos_retrieve
      description: Get detailed information about a specific document repository by
        its ID.
      summary: Retrieve a specific document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document Repository.
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRepo'
          description: ''
    put:
      operationId: documents_v1_repos_update
      description: Modify the details of an existing document repository by its ID.
      summary: Update an existing document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document Repository.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRepo'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRepo'
          description: ''
    patch:
      operationId: documents_v1_repos_partial_update
      description: Update specific fields of an existing document repository without
        affecting others.
      summary: Partially update a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document Repository.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRepo'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRepo'
          description: ''
    delete:
      operationId: documents_v1_repos_destroy
      description: Remove a document repository from the system by its ID.
      summary: Delete a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document Repository.
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/v1/repos/{repo_id}/documents/:
    get:
      operationId: documents_v1_repos_documents_list
      description: Retrieve a list of all documents within a specific document repository,
        optionally filtered by folder.
      summary: List all documents in a document repository
      parameters:
      - in: query
        name: folder_id
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: documents_v1_repos_documents_create
      description: Add a new document to a specific document repository.
      summary: Create a new document in a document repository
      parameters:
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/v1/repos/{repo_id}/documents/{document_id}/tags/:
    get:
      operationId: documents_v1_repos_documents_tags_list
      description: Retrieve a list of all tags associated with a specific document
        within a document repository.
      summary: List all tags for a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentTagList'
          description: ''
    post:
      operationId: documents_v1_repos_documents_tags_create
      description: Add a new tag to a specific document within a document repository.
      summary: Assign tag to a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTag'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTag'
          description: ''
  /api/documents/v1/repos/{repo_id}/documents/{document_id}/tags/{id}/:
    get:
      operationId: documents_v1_repos_documents_tags_retrieve
      description: Get detailed information about a specific tag associated with a
        document by its ID.
      summary: Retrieve a specific tag for a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document Tag.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTag'
          description: ''
    delete:
      operationId: documents_v1_repos_documents_tags_destroy
      description: Remove a specific tag from a document by its ID.
      summary: Remove tag from a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document Tag.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/:
    get:
      operationId: documents_v1_repos_documents_versions_list
      description: Retrieve a list of all versions of a specific document within a
        document repository.
      summary: List all versions of a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentVersionList'
          description: ''
    post:
      operationId: documents_v1_repos_documents_versions_create
      description: Add a new version to a specific document within a document repository.
      summary: Create a new version of a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVersion'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersion'
          description: ''
  /api/documents/v1/repos/{repo_id}/documents/{document_id}/versions/{id}/:
    get:
      operationId: documents_v1_repos_documents_versions_retrieve
      description: Get detailed information about a specific version of a document
        by its ID.
      summary: Retrieve a specific version of a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Document Version ID
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersion'
          description: ''
    put:
      operationId: documents_v1_repos_documents_versions_update
      description: Modify the details of an existing version of a document by its
        ID.
      summary: Update an existing version of a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Document Version ID
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentVersion'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersion'
          description: ''
    patch:
      operationId: documents_v1_repos_documents_versions_partial_update
      description: Update specific fields of an existing version of a document without
        affecting others.
      summary: Partially update a version of a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Document Version ID
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentVersion'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersion'
          description: ''
    delete:
      operationId: documents_v1_repos_documents_versions_destroy
      description: Remove a specific version of a document from the system by its
        ID.
      summary: Delete a version of a document
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: Document Version ID
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/v1/repos/{repo_id}/documents/{id}/:
    get:
      operationId: documents_v1_repos_documents_retrieve
      description: Get detailed information about a specific document in a document
        repository by its ID.
      summary: Retrieve a specific document in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: documents_v1_repos_documents_update
      description: Modify the details of an existing document in a document repository
        by its ID.
      summary: Update an existing document in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: documents_v1_repos_documents_partial_update
      description: Update specific fields of an existing document in a document repository
        without affecting others.
      summary: Partially update a document in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: documents_v1_repos_documents_destroy
      description: Remove a document from a specific document repository by its ID.
      summary: Delete a document in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Document.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/v1/repos/{repo_id}/folders/:
    get:
      operationId: documents_v1_repos_folders_list
      description: Retrieve a list of all folders within a specific document repository,
        optionally filtered by parent folder.
      summary: List all folders in a document repository
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: parent_folder_id
        schema:
          type: string
        description: Find folders within a specific parent folder
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFolderList'
          description: ''
    post:
      operationId: documents_v1_repos_folders_create
      description: Add a new folder to a specific document repository.
      summary: Create a new folder in a document repository
      parameters:
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
  /api/documents/v1/repos/{repo_id}/folders/{id}/:
    get:
      operationId: documents_v1_repos_folders_retrieve
      description: Get detailed information about a specific folder in a document
        repository by its ID.
      summary: Retrieve a specific folder in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Folder.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
    put:
      operationId: documents_v1_repos_folders_update
      description: Modify the details of an existing folder in a document repository
        by its ID.
      summary: Update an existing folder in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Folder.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
    patch:
      operationId: documents_v1_repos_folders_partial_update
      description: Update specific fields of an existing folder in a document repository
        without affecting others.
      summary: Partially update a folder in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Folder.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFolder'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
    delete:
      operationId: documents_v1_repos_folders_destroy
      description: Remove a folder from a specific document repository by its ID.
      summary: Delete a folder in a document repository
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Folder.
        required: true
      - in: path
        name: repo_id
        schema:
          type: string
        description: Document Repository ID
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/v1/tags/:
    get:
      operationId: documents_v1_tags_list
      description: Retrieve a list of all tags in the system.
      summary: List all tags
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: documents_v1_tags_create
      description: Add a new tag to the system.
      summary: Create a new tag
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/documents/v1/tags/{id}/:
    get:
      operationId: documents_v1_tags_retrieve
      description: Get detailed information about a specific tag by its ID.
      summary: Retrieve a specific tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: documents_v1_tags_update
      description: Modify the details of an existing tag by its ID.
      summary: Update an existing tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: documents_v1_tags_partial_update
      description: Update specific fields of an existing tag without affecting others.
      summary: Partially update a tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: documents_v1_tags_destroy
      description: Remove a tag from the system by its ID.
      summary: Delete a tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Tag.
        required: true
      tags:
      - documents
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/forms/v1/forms/:
    get:
      operationId: forms_v1_forms_list
      description: Retrieve a list of all forms in the system.
      summary: List all forms
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormList'
          description: ''
    post:
      operationId: forms_v1_forms_create
      description: Add a new form to the system.
      summary: Create a new form
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
  /api/forms/v1/forms/{form_id}/fields/:
    get:
      operationId: forms_v1_forms_fields_list
      description: Retrieve a list of all fields associated with a specific form.
      summary: List all form fields
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormFieldList'
              examples:
                ShortTextField:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 1
                      form: 1
                      order: 1
                      type: short_text
                      title: Sample Field
                      description: This is a sample field description.
                      placeholder: Enter text here
                      is_required: true
                      configuration:
                        max_length: 500
                        min_length: 10
                  summary: Short Text Field
                FileUploadField:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 2
                      form: 1
                      order: 2
                      type: file_upload
                      title: Upload Documents
                      description: Please upload your documents
                      is_required: true
                      configuration:
                        allowed_file_types:
                        - image
                        - document
                        max_file_size: 10485760
                        allow_multiple: false
                  summary: File Upload Field
                ExternalSignatureField:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 3
                      form: 1
                      order: 3
                      type: external_signature
                      title: Sign Document
                      description: Please sign this document
                      is_required: true
                      configuration:
                        service: docusign
                  summary: External Signature Field
          description: ''
    post:
      operationId: forms_v1_forms_fields_create
      description: Add a new field to a specific form.
      summary: Create a new form field
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormField'
            examples:
              ShortTextField:
                value:
                  form: 1
                  order: 1
                  type: short_text
                  title: Full Name
                  description: Please enter your full name
                  is_required: true
                  configuration:
                    min_length: 2
                    max_length: 100
                    pattern: ''
                summary: Short Text Field
              MultipleChoiceField:
                value:
                  form: 1
                  order: 2
                  type: multi_choice
                  title: Favorite Colors
                  description: Select your favorite color(s)
                  is_required: false
                  configuration:
                    options:
                    - Red
                    - Blue
                    - Green
                    - Yellow
                    allow_multiple: true
                summary: Multiple Choice Field
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormField'
              examples:
                ShortTextField:
                  value:
                    form: 1
                    order: 1
                    type: short_text
                    title: Full Name
                    description: Please enter your full name
                    is_required: true
                    configuration:
                      min_length: 2
                      max_length: 100
                      pattern: ''
                  summary: Short Text Field
                MultipleChoiceField:
                  value:
                    form: 1
                    order: 2
                    type: multi_choice
                    title: Favorite Colors
                    description: Select your favorite color(s)
                    is_required: false
                    configuration:
                      options:
                      - Red
                      - Blue
                      - Green
                      - Yellow
                      allow_multiple: true
                  summary: Multiple Choice Field
          description: ''
  /api/forms/v1/forms/{form_id}/fields/{id}/:
    get:
      operationId: forms_v1_forms_fields_retrieve
      description: Get detailed information about a specific form field by its ID.
      summary: Retrieve a specific form field
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Field.
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormField'
              examples:
                ShortTextField:
                  value:
                    id: 1
                    form: 1
                    order: 1
                    type: short_text
                    title: Sample Field
                    description: This is a sample field description.
                    placeholder: Enter text here
                    is_required: true
                    configuration:
                      max_length: 500
                      min_length: 10
                  summary: Short Text Field
                FileUploadField:
                  value:
                    id: 2
                    form: 1
                    order: 2
                    type: file_upload
                    title: Upload Documents
                    description: Please upload your documents
                    is_required: true
                    configuration:
                      allowed_file_types:
                      - image
                      - document
                      max_file_size: 10485760
                      allow_multiple: false
                  summary: File Upload Field
                ExternalSignatureField:
                  value:
                    id: 3
                    form: 1
                    order: 3
                    type: external_signature
                    title: Sign Document
                    description: Please sign this document
                    is_required: true
                    configuration:
                      service: docusign
                  summary: External Signature Field
          description: ''
    put:
      operationId: forms_v1_forms_fields_update
      description: Modify the details of an existing form field by its ID.
      summary: Update an existing form field
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Field.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormField'
            examples:
              ShortTextField:
                value:
                  id: 1
                  form: 1
                  order: 1
                  type: short_text
                  title: Sample Field
                  description: This is a sample field description.
                  placeholder: Enter text here
                  is_required: true
                  configuration:
                    max_length: 500
                    min_length: 10
                summary: Short Text Field
              FileUploadField:
                value:
                  id: 2
                  form: 1
                  order: 2
                  type: file_upload
                  title: Upload Documents
                  description: Please upload your documents
                  is_required: true
                  configuration:
                    allowed_file_types:
                    - image
                    - document
                    max_file_size: 10485760
                    allow_multiple: false
                summary: File Upload Field
              ExternalSignatureField:
                value:
                  id: 3
                  form: 1
                  order: 3
                  type: external_signature
                  title: Sign Document
                  description: Please sign this document
                  is_required: true
                  configuration:
                    service: docusign
                summary: External Signature Field
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormField'
              examples:
                ShortTextField:
                  value:
                    id: 1
                    form: 1
                    order: 1
                    type: short_text
                    title: Sample Field
                    description: This is a sample field description.
                    placeholder: Enter text here
                    is_required: true
                    configuration:
                      max_length: 500
                      min_length: 10
                  summary: Short Text Field
                FileUploadField:
                  value:
                    id: 2
                    form: 1
                    order: 2
                    type: file_upload
                    title: Upload Documents
                    description: Please upload your documents
                    is_required: true
                    configuration:
                      allowed_file_types:
                      - image
                      - document
                      max_file_size: 10485760
                      allow_multiple: false
                  summary: File Upload Field
                ExternalSignatureField:
                  value:
                    id: 3
                    form: 1
                    order: 3
                    type: external_signature
                    title: Sign Document
                    description: Please sign this document
                    is_required: true
                    configuration:
                      service: docusign
                  summary: External Signature Field
          description: ''
    patch:
      operationId: forms_v1_forms_fields_partial_update
      description: Update specific fields of an existing form field without affecting
        others.
      summary: Partially update a form field
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Field.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormField'
            examples:
              ShortTextField:
                value:
                  id: 1
                  form: 1
                  order: 1
                  type: short_text
                  title: Sample Field
                  description: This is a sample field description.
                  placeholder: Enter text here
                  is_required: true
                  configuration:
                    max_length: 500
                    min_length: 10
                summary: Short Text Field
              FileUploadField:
                value:
                  id: 2
                  form: 1
                  order: 2
                  type: file_upload
                  title: Upload Documents
                  description: Please upload your documents
                  is_required: true
                  configuration:
                    allowed_file_types:
                    - image
                    - document
                    max_file_size: 10485760
                    allow_multiple: false
                summary: File Upload Field
              ExternalSignatureField:
                value:
                  id: 3
                  form: 1
                  order: 3
                  type: external_signature
                  title: Sign Document
                  description: Please sign this document
                  is_required: true
                  configuration:
                    service: docusign
                summary: External Signature Field
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormField'
              examples:
                ShortTextField:
                  value:
                    id: 1
                    form: 1
                    order: 1
                    type: short_text
                    title: Sample Field
                    description: This is a sample field description.
                    placeholder: Enter text here
                    is_required: true
                    configuration:
                      max_length: 500
                      min_length: 10
                  summary: Short Text Field
                FileUploadField:
                  value:
                    id: 2
                    form: 1
                    order: 2
                    type: file_upload
                    title: Upload Documents
                    description: Please upload your documents
                    is_required: true
                    configuration:
                      allowed_file_types:
                      - image
                      - document
                      max_file_size: 10485760
                      allow_multiple: false
                  summary: File Upload Field
                ExternalSignatureField:
                  value:
                    id: 3
                    form: 1
                    order: 3
                    type: external_signature
                    title: Sign Document
                    description: Please sign this document
                    is_required: true
                    configuration:
                      service: docusign
                  summary: External Signature Field
          description: ''
    delete:
      operationId: forms_v1_forms_fields_destroy
      description: Remove a form field from the system by its ID.
      summary: Delete a form field
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Field.
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/forms/v1/forms/{form_id}/submissions/:
    get:
      operationId: forms_v1_forms_submissions_list
      description: Retrieve a list of all submissions associated with a specific form.
      summary: List all submissions for a form
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionList'
          description: ''
    post:
      operationId: forms_v1_forms_submissions_create
      description: Add a new submission to a specific form.
      summary: Create a new submission for a form
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
          description: ''
  /api/forms/v1/forms/{form_id}/submissions/{id}/:
    get:
      operationId: forms_v1_forms_submissions_retrieve
      description: Get detailed information about a specific submission by its ID.
      summary: Retrieve a specific submission
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Submission.
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
          description: ''
    put:
      operationId: forms_v1_forms_submissions_update
      description: Modify the details of an existing submission by its ID.
      summary: Update an existing submission
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Submission.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
          description: ''
    patch:
      operationId: forms_v1_forms_submissions_partial_update
      description: Update specific fields of an existing submission without affecting
        others.
      summary: Partially update a submission
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Submission.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmission'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
          description: ''
    delete:
      operationId: forms_v1_forms_submissions_destroy
      description: Remove a submission from the system by its ID.
      summary: Delete a submission
      parameters:
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form Submission.
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/forms/v1/forms/{form_id}/submissions/{submission_id}/field/{field_id}/response/:
    get:
      operationId: forms_v1_forms_submissions_field_response_list
      description: Retrieve a list of all field values associated with a specific
        submission.
      summary: List all field values for a submission
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: ID of the field of the form
        required: true
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: submission_id
        schema:
          type: integer
        description: ID of the submission
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubmissionFieldValueList'
          description: ''
    post:
      operationId: forms_v1_forms_submissions_field_response_create
      description: Add a new field value to a specific submission.
      summary: Create a new field value for a submission
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: ID of the field of the form
        required: true
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: submission_id
        schema:
          type: integer
        description: ID of the submission
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionFieldValue'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionFieldValue'
          description: ''
  /api/forms/v1/forms/{form_id}/submissions/{submission_id}/field/{field_id}/response/{id}/:
    get:
      operationId: forms_v1_forms_submissions_field_response_retrieve
      description: Get detailed information about a specific field value by its ID.
      summary: Retrieve a specific field value
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: ID of the field of the form
        required: true
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Submission Field Value.
        required: true
      - in: path
        name: submission_id
        schema:
          type: integer
        description: ID of the submission
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionFieldValue'
          description: ''
    put:
      operationId: forms_v1_forms_submissions_field_response_update
      description: Modify the details of an existing field value by its ID.
      summary: Update an existing field value
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: ID of the field of the form
        required: true
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Submission Field Value.
        required: true
      - in: path
        name: submission_id
        schema:
          type: integer
        description: ID of the submission
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionFieldValue'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionFieldValue'
          description: ''
    patch:
      operationId: forms_v1_forms_submissions_field_response_partial_update
      description: Update specific fields of an existing field value without affecting
        others.
      summary: Partially update a field value
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: ID of the field of the form
        required: true
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Submission Field Value.
        required: true
      - in: path
        name: submission_id
        schema:
          type: integer
        description: ID of the submission
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubmissionFieldValue'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionFieldValue'
          description: ''
    delete:
      operationId: forms_v1_forms_submissions_field_response_destroy
      description: Remove a field value from the system by its ID.
      summary: Delete a field value
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: ID of the field of the form
        required: true
      - in: path
        name: form_id
        schema:
          type: integer
        description: ID of the form
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Submission Field Value.
        required: true
      - in: path
        name: submission_id
        schema:
          type: integer
        description: ID of the submission
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/forms/v1/forms/{id}/:
    get:
      operationId: forms_v1_forms_retrieve
      description: Get detailed information about a specific form by its ID.
      summary: Retrieve a specific form
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form.
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
    put:
      operationId: forms_v1_forms_update
      description: Modify the details of an existing form by its ID.
      summary: Update an existing form
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
    patch:
      operationId: forms_v1_forms_partial_update
      description: Update specific fields of an existing form without affecting others.
      summary: Partially update a form
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form.
        required: true
      tags:
      - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedForm'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
    delete:
      operationId: forms_v1_forms_destroy
      description: Remove a form from the system by its ID.
      summary: Delete a form
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Form.
        required: true
      tags:
      - forms
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/hr/employee-qualifications/:
    get:
      operationId: hr_employee_qualifications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeQualificationList'
          description: ''
    post:
      operationId: hr_employee_qualifications_create
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeQualification'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeQualification'
          description: ''
  /api/hr/employee-qualifications/{id}/:
    get:
      operationId: hr_employee_qualifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee qualification.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeQualification'
          description: ''
    put:
      operationId: hr_employee_qualifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee qualification.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeQualification'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeQualification'
          description: ''
    patch:
      operationId: hr_employee_qualifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee qualification.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeQualification'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeQualification'
          description: ''
    delete:
      operationId: hr_employee_qualifications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employee qualification.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/hr/employees/:
    get:
      operationId: hr_employees_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
    post:
      operationId: hr_employees_create
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/hr/employees/{id}/:
    get:
      operationId: hr_employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: hr_employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: hr_employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: hr_employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Employee.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/hr/employment-types/:
    get:
      operationId: hr_employment_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmploymentTypeList'
          description: ''
    post:
      operationId: hr_employment_types_create
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentType'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentType'
          description: ''
  /api/hr/employment-types/{id}/:
    get:
      operationId: hr_employment_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employment type.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentType'
          description: ''
    put:
      operationId: hr_employment_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employment type.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmploymentType'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentType'
          description: ''
    patch:
      operationId: hr_employment_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employment type.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmploymentType'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentType'
          description: ''
    delete:
      operationId: hr_employment_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this employment type.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/hr/qualifications/:
    get:
      operationId: hr_qualifications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQualificationList'
          description: ''
    post:
      operationId: hr_qualifications_create
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qualification'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
  /api/hr/qualifications/{id}/:
    get:
      operationId: hr_qualifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this qualification.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
    put:
      operationId: hr_qualifications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this qualification.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qualification'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
    patch:
      operationId: hr_qualifications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this qualification.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQualification'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qualification'
          description: ''
    delete:
      operationId: hr_qualifications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this qualification.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/hr/work-locations/:
    get:
      operationId: hr_work_locations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkLocationList'
          description: ''
    post:
      operationId: hr_work_locations_create
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkLocation'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkLocation'
          description: ''
  /api/hr/work-locations/{id}/:
    get:
      operationId: hr_work_locations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work location.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkLocation'
          description: ''
    put:
      operationId: hr_work_locations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work location.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkLocation'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkLocation'
          description: ''
    patch:
      operationId: hr_work_locations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work location.
        required: true
      tags:
      - hr
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkLocation'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkLocation'
          description: ''
    delete:
      operationId: hr_work_locations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work location.
        required: true
      tags:
      - hr
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/identity/session-status/:
    get:
      operationId: identity_session_status_retrieve
      tags:
      - identity
      security:
      - CadenceSession: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionStatus'
          description: ''
  /api/identity/users/:
    get:
      operationId: identity_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - identity
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: identity_users_create
      tags:
      - identity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/identity/users/{id}/:
    get:
      operationId: identity_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - identity
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: identity_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - identity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: identity_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - identity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: identity_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - identity
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/countries/:
    get:
      operationId: location_v1_countries_list
      description: Retrieve a list of all countries in the system.
      summary: List all countries
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: location_v1_countries_create
      description: Add a new country to the system.
      summary: Create a new country
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/location/v1/countries/{country_id}/addresses/:
    get:
      operationId: location_v1_countries_addresses_list
      description: Retrieve a list of all addresses within a specific country.
      summary: List all addresses in a country
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressList'
          description: ''
    post:
      operationId: location_v1_countries_addresses_create
      description: Add a new address to a specific country.
      summary: Create a new address in a country
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/location/v1/countries/{country_id}/addresses/{id}/:
    get:
      operationId: location_v1_countries_addresses_retrieve
      description: Get detailed information about a specific address by its ID.
      summary: Retrieve a specific address
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: location_v1_countries_addresses_update
      description: Modify the details of an existing address by its ID.
      summary: Update an existing address
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: location_v1_countries_addresses_partial_update
      description: Update specific fields of an existing address without affecting
        others.
      summary: Partially update an address
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: location_v1_countries_addresses_destroy
      description: Remove an address from the system by its ID.
      summary: Delete an address
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/countries/{country_id}/state/:
    get:
      operationId: location_v1_countries_state_list
      description: Retrieve a list of all states within a specific country.
      summary: List all states in a country
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStateList'
          description: ''
    post:
      operationId: location_v1_countries_state_create
      description: Add a new state to a specific country.
      summary: Create a new state in a country
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api/location/v1/countries/{country_id}/state/{id}/:
    get:
      operationId: location_v1_countries_state_retrieve
      description: Get detailed information about a specific state by its ID.
      summary: Retrieve a specific state
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this state.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
    put:
      operationId: location_v1_countries_state_update
      description: Modify the details of an existing state by its ID.
      summary: Update an existing state
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this state.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/State'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
    patch:
      operationId: location_v1_countries_state_partial_update
      description: Update specific fields of an existing state without affecting others.
      summary: Partially update a state
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this state.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedState'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
    delete:
      operationId: location_v1_countries_state_destroy
      description: Remove a state from the system by its ID.
      summary: Delete a state
      parameters:
      - in: path
        name: country_id
        schema:
          type: integer
        description: Country ID
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this state.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/countries/{id}/:
    get:
      operationId: location_v1_countries_retrieve
      description: Get detailed information about a specific country by its ID.
      summary: Retrieve a specific country
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: location_v1_countries_update
      description: Modify the details of an existing country by its ID.
      summary: Update an existing country
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: location_v1_countries_partial_update
      description: Update specific fields of an existing country without affecting
        others.
      summary: Partially update a country
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: location_v1_countries_destroy
      description: Remove a country from the system by its ID.
      summary: Delete a country
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/venue-tags/:
    get:
      operationId: location_v1_venue_tags_list
      description: Retrieve a list of all tags associated with venues.
      summary: List all venue tags
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVenueTagList'
          description: ''
    post:
      operationId: location_v1_venue_tags_create
      description: Add a new tag to the venue system.
      summary: Create a new venue tag
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueTag'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTag'
          description: ''
  /api/location/v1/venue-tags/{id}/:
    get:
      operationId: location_v1_venue_tags_retrieve
      description: Get detailed information about a specific venue tag by its ID.
      summary: Retrieve a specific venue tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTag'
          description: ''
    put:
      operationId: location_v1_venue_tags_update
      description: Modify the details of an existing venue tag by its ID.
      summary: Update an existing venue tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueTag'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTag'
          description: ''
    patch:
      operationId: location_v1_venue_tags_partial_update
      description: Update specific fields of an existing venue tag without affecting
        others.
      summary: Partially update a venue tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVenueTag'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTag'
          description: ''
    delete:
      operationId: location_v1_venue_tags_destroy
      description: Remove a venue tag from the system by its ID.
      summary: Delete a venue tag
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/venues/:
    get:
      operationId: location_v1_venues_list
      description: Retrieve a list of all venues in the system.
      summary: List all venues
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVenueList'
          description: ''
    post:
      operationId: location_v1_venues_create
      description: Add a new venue to the system.
      summary: Create a new venue
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
  /api/location/v1/venues/{id}/:
    get:
      operationId: location_v1_venues_retrieve
      description: Get detailed information about a specific venue by its ID.
      summary: Retrieve a specific venue
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    put:
      operationId: location_v1_venues_update
      description: Modify the details of an existing venue by its ID.
      summary: Update an existing venue
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    patch:
      operationId: location_v1_venues_partial_update
      description: Update specific fields of an existing venue without affecting others.
      summary: Partially update a venue
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVenue'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
          description: ''
    delete:
      operationId: location_v1_venues_destroy
      description: Remove a venue from the system by its ID.
      summary: Delete a venue
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue.
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/venues/{venue_id}/capacities/:
    get:
      operationId: location_v1_venues_capacities_list
      description: Retrieve a list of all seating capacities for a venue.
      summary: List all venue capacities
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVenueCapacityList'
          description: ''
    post:
      operationId: location_v1_venues_capacities_create
      description: Add a new seating capacity for a specific venue.
      summary: Create a new venue capacity
      parameters:
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueCapacity'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueCapacity'
          description: ''
  /api/location/v1/venues/{venue_id}/capacities/{id}/:
    get:
      operationId: location_v1_venues_capacities_retrieve
      description: Get detailed information about a specific venue capacity by its
        ID.
      summary: Retrieve a specific venue capacity
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue capacity.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueCapacity'
          description: ''
    put:
      operationId: location_v1_venues_capacities_update
      description: Modify the details of an existing venue capacity by its ID.
      summary: Update an existing venue capacity
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue capacity.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueCapacity'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueCapacity'
          description: ''
    patch:
      operationId: location_v1_venues_capacities_partial_update
      description: Update specific fields of an existing venue capacity without affecting
        others.
      summary: Partially update a venue capacity
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue capacity.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVenueCapacity'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueCapacity'
          description: ''
    delete:
      operationId: location_v1_venues_capacities_destroy
      description: Remove a venue capacity from the system by its ID.
      summary: Delete a venue capacity
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue capacity.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/location/v1/venues/{venue_id}/tags/:
    get:
      operationId: location_v1_venues_tags_list
      description: Retrieve a list of all tags assigned to a specific venue.
      summary: List all tag assignments for a venue
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVenueTagAssignmentList'
          description: ''
    post:
      operationId: location_v1_venues_tags_create
      description: Assign a new tag to a specific venue.
      summary: Create a new tag assignment for a venue
      parameters:
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueTagAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTagAssignment'
          description: ''
  /api/location/v1/venues/{venue_id}/tags/{id}/:
    get:
      operationId: location_v1_venues_tags_retrieve
      description: Get detailed information about a specific tag assignment by its
        ID.
      summary: Retrieve a specific tag assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag assignment.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTagAssignment'
          description: ''
    put:
      operationId: location_v1_venues_tags_update
      description: Modify the details of an existing tag assignment by its ID.
      summary: Update an existing tag assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag assignment.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueTagAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTagAssignment'
          description: ''
    patch:
      operationId: location_v1_venues_tags_partial_update
      description: Update specific fields of an existing tag assignment without affecting
        others.
      summary: Partially update a tag assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag assignment.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVenueTagAssignment'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueTagAssignment'
          description: ''
    delete:
      operationId: location_v1_venues_tags_destroy
      description: Remove a tag assignment from the system by its ID.
      summary: Delete a tag assignment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this venue tag assignment.
        required: true
      - in: path
        name: venue_id
        schema:
          type: integer
        description: Venue ID
        required: true
      tags:
      - location
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/performance/:
    get:
      operationId: production_v1_performance_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPerformanceList'
          description: ''
    post:
      operationId: production_v1_performance_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performance'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
          description: ''
  /api/production/v1/performance/{id}/:
    get:
      operationId: production_v1_performance_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Performance.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
          description: ''
    put:
      operationId: production_v1_performance_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Performance.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performance'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
          description: ''
    patch:
      operationId: production_v1_performance_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Performance.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerformance'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performance'
          description: ''
    delete:
      operationId: production_v1_performance_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Performance.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/prod-category/:
    get:
      operationId: production_v1_prod_category_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionCategoryList'
          description: ''
    post:
      operationId: production_v1_prod_category_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategory'
          description: ''
  /api/production/v1/prod-category-assignment/:
    get:
      operationId: production_v1_prod_category_assignment_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionCategoryAssignmentList'
          description: ''
    post:
      operationId: production_v1_prod_category_assignment_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCategoryAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategoryAssignment'
          description: ''
  /api/production/v1/prod-category-assignment/{id}/:
    get:
      operationId: production_v1_prod_category_assignment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category Assignment.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategoryAssignment'
          description: ''
    put:
      operationId: production_v1_prod_category_assignment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category Assignment.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCategoryAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategoryAssignment'
          description: ''
    patch:
      operationId: production_v1_prod_category_assignment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category Assignment.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionCategoryAssignment'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategoryAssignment'
          description: ''
    delete:
      operationId: production_v1_prod_category_assignment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category Assignment.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/prod-category/{id}/:
    get:
      operationId: production_v1_prod_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategory'
          description: ''
    put:
      operationId: production_v1_prod_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCategory'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategory'
          description: ''
    patch:
      operationId: production_v1_prod_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionCategory'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCategory'
          description: ''
    delete:
      operationId: production_v1_prod_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Category.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/prod-members/:
    get:
      operationId: production_v1_prod_members_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionMemberList'
          description: ''
    post:
      operationId: production_v1_prod_members_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionMember'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionMember'
          description: ''
  /api/production/v1/prod-members/{id}/:
    get:
      operationId: production_v1_prod_members_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this production member.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionMember'
          description: ''
    put:
      operationId: production_v1_prod_members_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this production member.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionMember'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionMember'
          description: ''
    patch:
      operationId: production_v1_prod_members_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this production member.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionMember'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionMember'
          description: ''
    delete:
      operationId: production_v1_prod_members_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this production member.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/prod-roles/:
    get:
      operationId: production_v1_prod_roles_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionRoleAssignmentList'
          description: ''
    post:
      operationId: production_v1_prod_roles_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionRoleAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionRoleAssignment'
          description: ''
  /api/production/v1/prod-roles/{id}/:
    get:
      operationId: production_v1_prod_roles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Role Assignment.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionRoleAssignment'
          description: ''
    put:
      operationId: production_v1_prod_roles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Role Assignment.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionRoleAssignment'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionRoleAssignment'
          description: ''
    patch:
      operationId: production_v1_prod_roles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Role Assignment.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionRoleAssignment'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionRoleAssignment'
          description: ''
    delete:
      operationId: production_v1_prod_roles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Role Assignment.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/production/:
    get:
      operationId: production_v1_production_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionList'
          description: ''
    post:
      operationId: production_v1_production_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Production'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
          description: ''
  /api/production/v1/production-venue/:
    get:
      operationId: production_v1_production_venue_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductionVenueList'
          description: ''
    post:
      operationId: production_v1_production_venue_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionVenue'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionVenue'
          description: ''
  /api/production/v1/production-venue/{id}/:
    get:
      operationId: production_v1_production_venue_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Venue.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionVenue'
          description: ''
    put:
      operationId: production_v1_production_venue_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Venue.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionVenue'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionVenue'
          description: ''
    patch:
      operationId: production_v1_production_venue_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Venue.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductionVenue'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionVenue'
          description: ''
    delete:
      operationId: production_v1_production_venue_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production Venue.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/production/{id}/:
    get:
      operationId: production_v1_production_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
          description: ''
    put:
      operationId: production_v1_production_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Production'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
          description: ''
    patch:
      operationId: production_v1_production_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduction'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Production'
          description: ''
    delete:
      operationId: production_v1_production_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Production.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/rehearsal/:
    get:
      operationId: production_v1_rehearsal_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRehearsalList'
          description: ''
    post:
      operationId: production_v1_rehearsal_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rehearsal'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rehearsal'
          description: ''
  /api/production/v1/rehearsal-participant/:
    get:
      operationId: production_v1_rehearsal_participant_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRehearsalParticipantList'
          description: ''
    post:
      operationId: production_v1_rehearsal_participant_create
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RehearsalParticipant'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RehearsalParticipant'
          description: ''
  /api/production/v1/rehearsal-participant/{id}/:
    get:
      operationId: production_v1_rehearsal_participant_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal Participant.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RehearsalParticipant'
          description: ''
    put:
      operationId: production_v1_rehearsal_participant_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal Participant.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RehearsalParticipant'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RehearsalParticipant'
          description: ''
    patch:
      operationId: production_v1_rehearsal_participant_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal Participant.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRehearsalParticipant'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RehearsalParticipant'
          description: ''
    delete:
      operationId: production_v1_rehearsal_participant_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal Participant.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/production/v1/rehearsal/{id}/:
    get:
      operationId: production_v1_rehearsal_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rehearsal'
          description: ''
    put:
      operationId: production_v1_rehearsal_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rehearsal'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rehearsal'
          description: ''
    patch:
      operationId: production_v1_rehearsal_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal.
        required: true
      tags:
      - production
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRehearsal'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rehearsal'
          description: ''
    delete:
      operationId: production_v1_rehearsal_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Rehearsal.
        required: true
      tags:
      - production
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - CadenceSession: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/ticketing/v1/discounts/:
    get:
      operationId: ticketing_v1_discounts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
    post:
      operationId: ticketing_v1_discounts_create
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/ticketing/v1/discounts/{discount_id}/ticket-types/:
    get:
      operationId: ticketing_v1_discounts_ticket_types_list
      parameters:
      - in: path
        name: discount_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountTicketTypeList'
          description: ''
    post:
      operationId: ticketing_v1_discounts_ticket_types_create
      parameters:
      - in: path
        name: discount_id
        schema:
          type: integer
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountTicketType'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountTicketType'
          description: ''
  /api/ticketing/v1/discounts/{discount_id}/ticket-types/{id}/:
    get:
      operationId: ticketing_v1_discounts_ticket_types_retrieve
      parameters:
      - in: path
        name: discount_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount Ticket Type.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountTicketType'
          description: ''
  /api/ticketing/v1/discounts/{id}/:
    get:
      operationId: ticketing_v1_discounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: ticketing_v1_discounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: ticketing_v1_discounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: ticketing_v1_discounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/ticketing/v1/prod-venue/{production_venue_id}/sections/:
    get:
      operationId: ticketing_v1_prod_venue_sections_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production & venue this section belongs to
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSectionList'
          description: ''
    post:
      operationId: ticketing_v1_prod_venue_sections_create
      parameters:
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production & venue this section belongs to
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
  /api/ticketing/v1/prod-venue/{production_venue_id}/sections/{id}/:
    get:
      operationId: ticketing_v1_prod_venue_sections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Section.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production & venue this section belongs to
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    put:
      operationId: ticketing_v1_prod_venue_sections_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Section.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production & venue this section belongs to
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    patch:
      operationId: ticketing_v1_prod_venue_sections_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Section.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production & venue this section belongs to
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSection'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
          description: ''
    delete:
      operationId: ticketing_v1_prod_venue_sections_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Section.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production & venue this section belongs to
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/:
    get:
      operationId: ticketing_v1_prod_venue_sections_seats_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: production_venue_id
        schema:
          type: string
        required: true
      - in: path
        name: section_id
        schema:
          type: string
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSectionSeatList'
          description: ''
    post:
      operationId: ticketing_v1_prod_venue_sections_seats_create
      parameters:
      - in: path
        name: production_venue_id
        schema:
          type: string
        required: true
      - in: path
        name: section_id
        schema:
          type: string
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionSeat'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionSeat'
          description: ''
  /api/ticketing/v1/prod-venue/{production_venue_id}/sections/{section_id}/seats/{id}/:
    get:
      operationId: ticketing_v1_prod_venue_sections_seats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Section Seat.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: string
        required: true
      - in: path
        name: section_id
        schema:
          type: string
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionSeat'
          description: ''
    put:
      operationId: ticketing_v1_prod_venue_sections_seats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Section Seat ID
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: string
        required: true
      - in: path
        name: section_id
        schema:
          type: string
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionSeat'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionSeat'
          description: ''
    patch:
      operationId: ticketing_v1_prod_venue_sections_seats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Section Seat ID
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: string
        required: true
      - in: path
        name: section_id
        schema:
          type: string
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSectionSeat'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionSeat'
          description: ''
    delete:
      operationId: ticketing_v1_prod_venue_sections_seats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Section Seat ID
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: string
        required: true
      - in: path
        name: section_id
        schema:
          type: string
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/:
    get:
      operationId: ticketing_v1_prod_venue_ticket_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production venue this ticket type belongs to.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketTypeList'
          description: ''
    post:
      operationId: ticketing_v1_prod_venue_ticket_types_create
      parameters:
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production venue this ticket type belongs to.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketType'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
  /api/ticketing/v1/prod-venue/{production_venue_id}/ticket-types/{id}/:
    get:
      operationId: ticketing_v1_prod_venue_ticket_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production venue this ticket type belongs to.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    put:
      operationId: ticketing_v1_prod_venue_ticket_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production venue this ticket type belongs to.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketType'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    patch:
      operationId: ticketing_v1_prod_venue_ticket_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production venue this ticket type belongs to.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicketType'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    delete:
      operationId: ticketing_v1_prod_venue_ticket_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      - in: path
        name: production_venue_id
        schema:
          type: integer
          description: The production venue this ticket type belongs to.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/ticketing/v1/purchases/:
    get:
      operationId: ticketing_v1_purchases_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPurchaseList'
          description: ''
    post:
      operationId: ticketing_v1_purchases_create
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
  /api/ticketing/v1/purchases/{id}/:
    get:
      operationId: ticketing_v1_purchases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Purchase.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    put:
      operationId: ticketing_v1_purchases_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Purchase.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    patch:
      operationId: ticketing_v1_purchases_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Purchase.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    delete:
      operationId: ticketing_v1_purchases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Purchase.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/ticketing/v1/purchases/{purchase_id}/tickets/:
    get:
      operationId: ticketing_v1_purchases_tickets_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: purchase_id
        schema:
          type: integer
          description: The purchase this ticket belongs to.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketList'
          description: ''
    post:
      operationId: ticketing_v1_purchases_tickets_create
      parameters:
      - in: path
        name: purchase_id
        schema:
          type: integer
          description: The purchase this ticket belongs to.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api/ticketing/v1/purchases/{purchase_id}/tickets/{id}/:
    get:
      operationId: ticketing_v1_purchases_tickets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: path
        name: purchase_id
        schema:
          type: integer
          description: The purchase this ticket belongs to.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: ticketing_v1_purchases_tickets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: path
        name: purchase_id
        schema:
          type: integer
          description: The purchase this ticket belongs to.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: ticketing_v1_purchases_tickets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: path
        name: purchase_id
        schema:
          type: integer
          description: The purchase this ticket belongs to.
        required: true
      tags:
      - ticketing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    delete:
      operationId: ticketing_v1_purchases_tickets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket.
        required: true
      - in: path
        name: purchase_id
        schema:
          type: integer
          description: The purchase this ticket belongs to.
        required: true
      tags:
      - ticketing
      security:
      - CadenceSession: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActionTypeEnum:
      enum:
      - CREATE
      - READ
      - UPDATE
      - DELETE
      - PERMISSION_CHECK
      type: string
      description: |-
        * `CREATE` - Create
        * `READ` - Read
        * `UPDATE` - Update
        * `DELETE` - Delete
        * `PERMISSION_CHECK` - Permission Check
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        line_1:
          type: string
          description: Street address or PO Box
          maxLength: 255
        line_2:
          type: string
          description: Additional address information, e.g., apartment, unit
          maxLength: 255
        city:
          type: string
          maxLength: 100
        suburb:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        state:
          type:
          - integer
          - 'null'
        country:
          type: integer
      required:
      - country
      - created_at
      - created_by
      - id
      - line_1
      - tenant
      - updated_at
    Asset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the asset
          maxLength: 255
        type:
          allOf:
          - $ref: '#/components/schemas/AssetTypeEnum'
          description: |-
            Type of the asset, either company or personal

            * `company` - Company Property
            * `personal` - Personal Property
        description:
          type:
          - string
          - 'null'
          description: Description of the asset
        notes:
          type:
          - string
          - 'null'
          description: Additional notes about the asset
        value:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Monetary value of the asset
        condition:
          allOf:
          - $ref: '#/components/schemas/ConditionEnum'
          description: |-
            Condition of the asset

            * `new` - New
            * `good` - Good
            * `fair` - Fair
            * `poor` - Poor
            * `damaged` - Damaged
            * `out_of_service` - Out of Service
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        owning_user:
          type:
          - integer
          - 'null'
          description: User who owns the asset
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    AssetTypeEnum:
      enum:
      - company
      - personal
      type: string
      description: |-
        * `company` - Company Property
        * `personal` - Personal Property
    Assignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        start_date:
          type: string
          format: date-time
          description: Date and time when the asset was assigned
        end_date:
          type:
          - string
          - 'null'
          format: date-time
          description: Date and time when the asset was returned
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        asset:
          type: integer
          description: The asset being assigned
        user:
          type:
          - integer
          - 'null'
          description: User to whom the asset is assigned
        production:
          type:
          - integer
          - 'null'
          description: Production associated with the asset assignment
      required:
      - asset
      - created_at
      - created_by
      - id
      - start_date
      - tenant
      - updated_at
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        timestamp:
          type: string
          format: date-time
          readOnly: true
        action_type:
          $ref: '#/components/schemas/ActionTypeEnum'
        description:
          type: string
        target_object:
          type: string
          maxLength: 255
        before_state: {}
        after_state: {}
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        user:
          type: integer
      required:
      - action_type
      - after_state
      - before_state
      - created_at
      - description
      - id
      - target_object
      - tenant
      - timestamp
      - updated_at
      - user
    Audition:
      type: object
      description: Serializer for the Audition model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the audition
          maxLength: 255
        description:
          type: string
          description: Description of the audition
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type:
          - integer
          - 'null'
          description: Venue for the audition
      required:
      - created_at
      - created_by
      - description
      - id
      - name
      - production
      - tenant
      - updated_at
    ConditionEnum:
      enum:
      - new
      - good
      - fair
      - poor
      - damaged
      - out_of_service
      type: string
      description: |-
        * `new` - New
        * `good` - Good
        * `fair` - Fair
        * `poor` - Poor
        * `damaged` - Damaged
        * `out_of_service` - Out of Service
    Context:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        value:
          type: string
          maxLength: 255
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        key:
          type: integer
      required:
      - created_at
      - id
      - key
      - tenant
      - updated_at
      - value
    ContextKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        app_name:
          type: string
          maxLength: 255
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - app_name
      - created_at
      - id
      - name
      - tenant
      - updated_at
    CostCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        line_code:
          type:
          - string
          - 'null'
          maxLength: 50
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        iso_code:
          type: string
          description: ISO 3166-1 alpha-3 country code
          maxLength: 3
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - iso_code
      - name
      - tenant
      - updated_at
    CurrencyEnum:
      enum:
      - AUD
      - CAD
      - EUR
      - GBP
      - JPY
      - NZD
      - USD
      type: string
      description: |-
        * `AUD` - AUD - Australian Dollar
        * `CAD` - CAD - Canadian Dollar
        * `EUR` - EUR - Euro
        * `GBP` - GBP - British Pound
        * `JPY` - JPY - Japanese Yen
        * `NZD` - NZD - New Zealand Dollar
        * `USD` - USD - United States Dollar
    Discount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the discount, e.g., Early Bird, Student Discount, etc.
          maxLength: 100
        code:
          type: string
          description: Unique code for the discount, used by customers to apply the
            discount.
          maxLength: 50
        description:
          type: string
          description: Description of the discount, if any.
        discount_type:
          allOf:
          - $ref: '#/components/schemas/DiscountTypeEnum'
          description: |-
            Type of discount, e.g., Percentage Off, Fixed Amount Off, Buy One Get One.

            * `percentage` - Percentage Off
            * `fixed_amount` - Fixed Amount Off
            * `bogo` - Buy One Get One
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Value of the discount. For percentage discounts, this is the
            percentage off. For fixed amount discounts, this is the amount off.
        minimum_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Minimum value of the order for the discount to apply.
        minimum_tickets:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Minimum number of tickets required for the discount to apply.
            0 means no minimum.
        global_limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Global limit for the discount, i.e., maximum number of times
            this discount can be used across all venues. null means unlimited. 0 means
            no uses allowed.
        customer_limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limit for each customer, i.e., maximum number of times a single
            customer can use this discount. null means unlimited. 0 means no uses
            allowed.
        valid_from:
          type:
          - string
          - 'null'
          format: date-time
          description: Start date and time for the discount to be valid. If null,
            the discount is valid immediately.
        valid_until:
          type:
          - string
          - 'null'
          format: date-time
          description: End date and time for the discount to be valid. If null, the
            discount is valid indefinitely.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
          description: The production this discount applies to.
        production_venue:
          type:
          - integer
          - 'null'
          description: If the discount is specific to a venue, this field will be
            set. If null, the discount applies to all venues for the production.
        applicable_ticket_types:
          type: array
          items:
            type: integer
          readOnly: true
          description: Ticket types to which this discount applies. If empty, the
            discount applies to all ticket types for the production.
      required:
      - applicable_ticket_types
      - code
      - created_at
      - created_by
      - id
      - name
      - production
      - tenant
      - updated_at
      - value
    DiscountTicketType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        discount:
          allOf:
          - $ref: '#/components/schemas/Discount'
          readOnly: true
        ticket_type:
          allOf:
          - $ref: '#/components/schemas/TicketType'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - discount
      - id
      - tenant
      - ticket_type
      - updated_at
    DiscountTypeEnum:
      enum:
      - percentage
      - fixed_amount
      - bogo
      type: string
      description: |-
        * `percentage` - Percentage Off
        * `fixed_amount` - Fixed Amount Off
        * `bogo` - Buy One Get One
    Document:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/DocumentStatusEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type:
          - integer
          - 'null'
        author:
          type:
          - integer
          - 'null'
        repo:
          type: integer
        folder:
          type:
          - integer
          - 'null'
        superseded_by:
          type:
          - integer
          - 'null'
          description: The document that supersedes this one, if any
        tags:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - repo
      - tags
      - tenant
      - title
      - updated_at
    DocumentRepo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 50
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - code
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    DocumentStatusEnum:
      enum:
      - draft
      - review
      - final
      - archived
      - superseded
      - template
      type: string
      description: |-
        * `draft` - Draft
        * `review` - Under Review
        * `final` - Final
        * `archived` - Archived
        * `superseded` - Superseded
        * `template` - Template
    DocumentTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag:
          allOf:
          - $ref: '#/components/schemas/Tag'
          readOnly: true
        document:
          allOf:
          - $ref: '#/components/schemas/Document'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - document
      - id
      - tag
      - tenant
      - updated_at
    DocumentVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        version:
          type: integer
          readOnly: true
          description: The version of the document
        file_url:
          type: string
          format: uri
          description: URL to the document file
          maxLength: 500
        version_notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        document:
          type: integer
      required:
      - created_at
      - created_by
      - document
      - file_url
      - id
      - tenant
      - updated_at
      - version
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type:
          - string
          - 'null'
          maxLength: 128
        postal_address:
          type: string
        city:
          type: string
          maxLength: 100
        postcode:
          type: string
          maxLength: 10
        date_of_birth:
          type:
          - string
          - 'null'
          format: date
        hire_date:
          type:
          - string
          - 'null'
          format: date
        position:
          type: string
          maxLength: 100
        hourly_rate:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        salary:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        tax_file_number:
          type: string
          maxLength: 15
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_relationship:
          type: string
          maxLength: 50
        emergency_contact_phone:
          type: string
          maxLength: 128
        is_active:
          type: boolean
        probation_end_date:
          type:
          - string
          - 'null'
          format: date
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        user:
          type: integer
        employee_address:
          type:
          - integer
          - 'null'
        state:
          type:
          - integer
          - 'null'
        country:
          type:
          - integer
          - 'null'
        employment_type:
          type:
          - integer
          - 'null'
        work_locations:
          type: array
          items:
            type: integer
        qualifications:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_at
      - created_by
      - first_name
      - id
      - qualifications
      - tenant
      - updated_at
      - user
    EmployeeQualification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        issue_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        employee:
          type: integer
        qualification:
          type: integer
      required:
      - created_at
      - created_by
      - employee
      - id
      - qualification
      - tenant
      - updated_at
    EmploymentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 50
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    Expense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        approved_date_time:
          type:
          - string
          - 'null'
          format: date-time
        status:
          $ref: '#/components/schemas/ExpenseStatusEnum'
        title:
          type: string
          maxLength: 200
        description:
          type: string
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        expense_date_time:
          type: string
          format: date-time
        payment_method:
          $ref: '#/components/schemas/ExpensePaymentMethodEnum'
        notes:
          type: string
        receipt_number:
          type: string
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        purchaser:
          type: integer
        approver:
          type:
          - integer
          - 'null'
        category:
          type:
          - integer
          - 'null'
          description: The Expense Category this expense belongs to. Either this or
            `prod_category` must be set (but not both).
        prod_category:
          type:
          - integer
          - 'null'
          description: The Production Expense Category this expense belongs to (if
            the expense belongs to a production). Either this or `category` must be
            set (but not both).
        vendor:
          type:
          - integer
          - 'null'
      required:
      - cost
      - created_at
      - created_by
      - expense_date_time
      - id
      - payment_method
      - purchaser
      - tenant
      - title
      - updated_at
    ExpenseAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        description:
          type: string
          maxLength: 255
        file_uri:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 500
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        expense:
          type: integer
        uploaded_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - expense
      - id
      - tenant
      - updated_at
    ExpensePaymentMethodEnum:
      enum:
      - personal_card
      - company_card
      - cash
      - bank_transfer
      - direct_debit
      type: string
      description: |-
        * `personal_card` - Personal Card
        * `company_card` - Company Card
        * `cash` - Cash
        * `bank_transfer` - Bank Transfer
        * `direct_debit` - Direct Debit
    ExpenseStatusEnum:
      enum:
      - draft
      - submitted
      - under_review
      - approved
      - rejected
      - reimbursed
      - partial_reimbursed
      - internal
      - cancelled
      - additional_info_required
      type: string
      description: |-
        * `draft` - Draft
        * `submitted` - Submitted
        * `under_review` - Under Review
        * `approved` - Approved
        * `rejected` - Rejected
        * `reimbursed` - Reimbursed
        * `partial_reimbursed` - Partially Reimbursed
        * `internal` - Internal (Company Card)
        * `cancelled` - Cancelled
        * `additional_info_required` - Additional Info Required
    Feedback:
      type: object
      description: Serializer for the Feedback model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        notes:
          type:
          - string
          - 'null'
          description: Feedback notes. Supports markdown.
        score:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: If the panel wishes to use scores, they can enter them here.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        signup:
          type: integer
        reviewer:
          type:
          - integer
          - 'null'
          description: User who provided the feedback. Can be null if feedback is
            anonymous.
      required:
      - created_at
      - created_by
      - id
      - signup
      - tenant
      - updated_at
    Folder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subfolders:
          type: array
          items:
            $ref: '#/components/schemas/Subfolder'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        repo:
          type: integer
        parent:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - repo
      - subfolders
      - tenant
      - updated_at
    Form:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          maxLength: 200
        description:
          type: string
        open_date_time:
          type:
          - string
          - 'null'
          format: date-time
        close_date_time:
          type:
          - string
          - 'null'
          format: date-time
        max_submissions:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        max_individual_submissions:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        success_message:
          type: string
        is_template:
          type: boolean
        is_active:
          type: boolean
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type:
          - integer
          - 'null'
          description: If this form is associated with a production, select it here.
      required:
      - created_at
      - created_by
      - id
      - tenant
      - title
      - updated_at
    FormField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        configuration:
          oneOf:
          - type: object
            title: Single Line Text Configuration
            properties:
              max_length:
                default: 255
                description: Maximum length of the text
                maximum: 1000
                title: Max Length
                type: integer
              min_length:
                default: 0
                description: Minimum length of the text
                minimum: 0
                title: Min Length
                type: integer
              lines:
                default: 1
                description: Number of lines for the text input
                title: Lines
                type: integer
              pattern:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Regex pattern for validation
                title: Pattern
            required: []
          - type: object
            title: Multiple Line Text Configuration
            properties:
              max_length:
                default: 5000
                description: Maximum length of the text
                maximum: 10000
                title: Max Length
                type: integer
              min_length:
                default: 0
                description: Minimum length of the text
                minimum: 0
                title: Min Length
                type: integer
              lines:
                default: 3
                description: Number of lines for the text input
                title: Lines
                type: integer
              rich_text:
                default: false
                description: Whether rich text formatting is allowed
                title: Rich Text
                type: boolean
            required: []
          - type: object
            title: Multiple Choice Configuration
            properties:
              options:
                description: List of options for the multiple choice field
                items:
                  type: string
                minItems: 1
                title: Options
                type: array
              allow_multiple:
                default: false
                description: Whether multiple selections are allowed
                title: Allow Multiple
                type: boolean
              allow_other:
                default: false
                description: Whether an 'Other' option is allowed for custom input
                title: Allow Other
                type: boolean
              other_placeholder:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Placeholder text for the 'Other' input field
                title: Other Placeholder
            required:
            - options
          - type: object
            title: Floating Point Number Configuration
            properties:
              min_value:
                anyOf:
                - minimum: 0
                  type: number
                - type: 'null'
                default: null
                description: Minimum value allowed
                title: Min Value
              max_value:
                anyOf:
                - maximum: 1000000
                  type: number
                - type: 'null'
                default: null
                description: Maximum value allowed
                title: Max Value
              step:
                default: 1.0
                description: Step increment for the number input
                exclusiveMinimum: 0
                title: Step
                type: number
            required: []
          - type: object
            title: Decimal Number Configuration
            properties:
              min_value:
                anyOf:
                - minimum: 0.0
                  type: number
                - type: string
                - type: 'null'
                default: null
                description: Minimum value allowed
                title: Min Value
              max_value:
                anyOf:
                - maximum: 1000000.0
                  type: number
                - type: string
                - type: 'null'
                default: null
                description: Maximum value allowed
                title: Max Value
              step:
                default: 0.01
                description: Step increment for the decimal number input
                exclusiveMinimum: 0
                title: Step
                type: number
              decimal_places:
                anyOf:
                - maximum: 6
                  minimum: 0
                  type: integer
                - type: 'null'
                default: 2
                description: Number of decimal places allowed
                title: Decimal Places
            required: []
          - type: object
            title: Information Display Configuration
            properties:
              content:
                description: Content to display in the information field
                title: Content
                type: string
            required:
            - content
          - type: object
            title: File Upload Configuration
            properties:
              allowed_file_types:
                description: List of allowed file types (e.g., 'image', 'document',
                  'video', 'audio', 'all')
                items:
                  $ref: '#/components/schemas/FileType'
                title: Allowed File Types
                type: array
              max_file_size:
                default: 10485760
                description: Maximum file size in bytes (default is 10MB, cannot be
                  more than 100MB)
                maximum: 104857600
                minimum: 0
                title: Max File Size
                type: integer
              allow_multiple:
                default: false
                description: Whether multiple file uploads are allowed
                title: Allow Multiple
                type: boolean
            required: []
          - type: object
            title: Slider Configuration
            properties:
              min_value:
                anyOf:
                - minimum: 0.0
                  type: number
                - type: string
                default: 0.0
                description: Minimum value for the slider
                title: Min Value
              max_value:
                anyOf:
                - maximum: 1000.0
                  type: number
                - type: string
                default: 10.0
                description: Maximum value for the slider
                title: Max Value
              step:
                anyOf:
                - exclusiveMinimum: 0.0
                  type: number
                - type: string
                default: 1.0
                description: Step increment for the slider
                title: Step
            required: []
          - type: object
            title: Date Picker Configuration
            properties:
              min_date:
                anyOf:
                - format: date
                  type: string
                - type: 'null'
                default: null
                description: Minimum date allowed in YYYY-MM-DD format
                title: Min Date
              max_date:
                anyOf:
                - format: date
                  type: string
                - type: 'null'
                default: null
                description: Maximum date allowed in YYYY-MM-DD format
                title: Max Date
            required: []
          - type: object
            title: Time Picker Configuration
            properties:
              min_time:
                anyOf:
                - format: time
                  type: string
                - type: 'null'
                default: null
                description: Minimum time allowed in HH:MM format
                title: Min Time
              max_time:
                anyOf:
                - format: time
                  type: string
                - type: 'null'
                default: null
                description: Maximum time allowed in HH:MM format
                title: Max Time
            required: []
          - type: object
            title: Date and Time Picker Configuration
            properties:
              min_datetime:
                anyOf:
                - format: date-time
                  type: string
                - type: 'null'
                default: null
                description: Minimum date and time allowed in ISO format
                title: Min Datetime
              max_datetime:
                anyOf:
                - format: date-time
                  type: string
                - type: 'null'
                default: null
                description: Maximum date and time allowed in ISO format
                title: Max Datetime
            required: []
          - type: object
            title: Email Address Configuration
            properties:
              allowed_domains:
                anyOf:
                - items:
                    type: string
                  type: array
                - type: 'null'
                default: null
                description: List of allowed email domains (e.g., ['example.com',
                  'test.com'])
                title: Allowed Domains
            required: []
          - type: object
            title: Phone Number Configuration
            properties:
              allowed_countries:
                anyOf:
                - items:
                    type: string
                  type: array
                - type: 'null'
                default: null
                description: List of allowed country codes for phone numbers (e.g.,
                  ['US', 'IN'])
                title: Allowed Countries
            required: []
          - type: object
            title: URL Configuration
            properties:
              allowed_schemes:
                default:
                - http
                - https
                description: List of allowed URL schemes (e.g., ['http', 'https'])
                items:
                  type: string
                title: Allowed Schemes
                type: array
              allow_custom_schemes:
                default: false
                description: Whether to allow custom URL schemes
                title: Allow Custom Schemes
                type: boolean
            required: []
          - type: object
            title: Single Checkbox Configuration
            properties:
              label:
                description: Label for the checkbox
                title: Label
                type: string
              is_checked:
                default: false
                description: Whether the checkbox is checked by default
                title: Is Checked
                type: boolean
            required:
            - label
          - type: object
            title: Section Header Configuration
            properties:
              title:
                default: null
                description: Title of the section
                title: Title
                type: string
              description:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Description of the section
                title: Description
            required: []
          - type: object
            title: Star Rating Configuration
            properties:
              max_rating:
                default: 5
                description: Maximum rating value (default is 5, can be between 1
                  and 10)
                maximum: 10
                minimum: 1
                title: Max Rating
                type: integer
              allow_half_stars:
                default: false
                description: Whether to allow half-star ratings
                title: Allow Half Stars
                type: boolean
            required: []
          - type: object
            title: Digital Signature Configuration
            properties:
              allow_drawing:
                default: true
                description: Whether users can draw their signature
                title: Allow Drawing
                type: boolean
              allow_upload:
                default: false
                description: Whether users can upload an image of their signature
                title: Allow Upload
                type: boolean
              allow_typing:
                default: false
                description: Whether users can type their signature
                title: Allow Typing
                type: boolean
              max_file_size:
                default: 5242880
                description: Maximum file size for uploaded signatures in bytes (default
                  is 5MB, cannot be more than 10MB)
                maximum: 10485760
                minimum: 0
                title: Max File Size
                type: integer
            required: []
          - type: object
            title: External Signature Configuration
            properties:
              service:
                $ref: '#/components/schemas/ExternalSignatureService'
                description: External signature service to use (e.g., 'dropboxsign',
                  'docusign', 'adobe', etc.)
              service_url:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: URL of the external signature service (if applicable)
                title: Service Url
              form_id:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Form ID for the external signature service (if required)
                title: Form Id
              template_id:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Template ID for the external signature service (if required)
                title: Template Id
              client_id:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Client ID for the external signature service (if required)
                title: Client Id
              client_secret:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Client secret for the external signature service (if
                  required)
                title: Client Secret
              api_key:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: API key for the external signature service (if required)
                title: Api Key
              allow_drawing:
                default: true
                description: Whether users can draw their signature using the external
                  service
                title: Allow Drawing
                type: boolean
              allow_upload:
                default: false
                description: Whether users can upload an image of their signature
                  using the external service
                title: Allow Upload
                type: boolean
              allow_typing:
                default: false
                description: Whether users can type their signature using the external
                  service
                title: Allow Typing
                type: boolean
            required:
            - service
          description: Field configuration object. The structure depends on the field
            type.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Order of the field in the form, used for rendering and display.
        type:
          allOf:
          - $ref: '#/components/schemas/FormFieldTypeEnum'
          description: |-
            Type of the form field, determines how it will be rendered and validated.

            * `short_text` - Single Line Text
            * `long_text` - Multiple Line Text
            * `multi_choice` - Multiple Choice
            * `number` - Floating Point Number
            * `decimal_number` - Decimal Number
            * `info` - Information Display
            * `file` - File Upload
            * `slider` - Slider
            * `date` - Date Picker
            * `time` - Time Picker
            * `datetime` - Date and Time Picker
            * `email` - Email Address
            * `phone` - Phone Number
            * `url` - URL
            * `checkbox` - Single Checkbox
            * `section_header` - Section Header
            * `rating` - Star Rating
            * `signature` - Digital Signature
            * `external_signature` - External Signature
        title:
          type: string
          description: Title of the form field, displayed to users.
          maxLength: 200
        description:
          type: string
          description: Optional description for the field, displayed to users.
        placeholder:
          type: string
          description: Placeholder text for the field, displayed when the field is
            empty. Not applicable for all field types.
          maxLength: 200
        is_required:
          type: boolean
          description: Whether this field is required to be filled out by the user.
            If true, the form cannot be submitted without a value for this field.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        form:
          type: integer
      required:
      - configuration
      - created_at
      - form
      - id
      - order
      - tenant
      - title
      - type
      - updated_at
    FormFieldTypeEnum:
      enum:
      - short_text
      - long_text
      - multi_choice
      - number
      - decimal_number
      - info
      - file
      - slider
      - date
      - time
      - datetime
      - email
      - phone
      - url
      - checkbox
      - section_header
      - rating
      - signature
      - external_signature
      type: string
      description: |-
        * `short_text` - Single Line Text
        * `long_text` - Multiple Line Text
        * `multi_choice` - Multiple Choice
        * `number` - Floating Point Number
        * `decimal_number` - Decimal Number
        * `info` - Information Display
        * `file` - File Upload
        * `slider` - Slider
        * `date` - Date Picker
        * `time` - Time Picker
        * `datetime` - Date and Time Picker
        * `email` - Email Address
        * `phone` - Phone Number
        * `url` - URL
        * `checkbox` - Single Checkbox
        * `section_header` - Section Header
        * `rating` - Star Rating
        * `signature` - Digital Signature
        * `external_signature` - External Signature
    Income:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          maxLength: 200
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        income_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/IncomeStatusEnum'
        payment_method:
          $ref: '#/components/schemas/IncomePaymentMethodEnum'
        source_name:
          type: string
          maxLength: 200
        source_contact:
          type: string
          maxLength: 200
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        gross_amount:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        fees_amount:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        tax_amount:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        reference_number:
          type: string
          maxLength: 100
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        category:
          type:
          - integer
          - 'null'
          description: The Income Category this income belongs to. Either this or
            `prod_category` must be set (but not both).
        prod_category:
          type:
          - integer
          - 'null'
          description: The Production Income Category this income belongs to (if the
            income belongs to a production). Either this or `category` must be set
            (but not both).
      required:
      - amount
      - created_at
      - created_by
      - id
      - payment_method
      - tenant
      - title
      - updated_at
    IncomeCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        type:
          $ref: '#/components/schemas/IncomeCategoryTypeEnum'
        line_code:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        name:
          type: string
          maxLength: 100
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - line_code
      - name
      - tenant
      - type
      - updated_at
    IncomeCategoryTypeEnum:
      enum:
      - ticket_sales
      - season_subscriptions
      - group_sales
      - concessions
      - merchandise
      - parking
      - grants
      - donations
      - sponsorships
      - fundraising_events
      - membership_fees
      - venue_rental
      - equipment_rental
      - workshop_fees
      - investment_income
      - insurance_claims
      - refunds
      - other
      type: string
      description: |-
        * `ticket_sales` - Ticket Sales
        * `season_subscriptions` - Season Subscriptions
        * `group_sales` - Group Sales
        * `concessions` - Food/Snack Concessions
        * `merchandise` - Merchandise
        * `parking` - Parking
        * `grants` - Grants
        * `donations` - Donations
        * `sponsorships` - Sponsorships
        * `fundraising_events` - Fundraising Events
        * `membership_fees` - Membership Fees
        * `venue_rental` - Venue Rental
        * `equipment_rental` - Equipment Rental
        * `workshop_fees` - Workshop/Class Fees
        * `investment_income` - Investment Income
        * `insurance_claims` - Insurance Claims
        * `refunds` - Refunds/Returns
        * `other` - Other
    IncomePaymentMethodEnum:
      enum:
      - cash
      - credit_card
      - debit_card
      - bank_transfer
      - cheque
      - paypal
      - stripe
      - square
      - eftpos
      - other
      type: string
      description: |-
        * `cash` - Cash
        * `credit_card` - Credit Card
        * `debit_card` - Debit Card
        * `bank_transfer` - Bank Transfer
        * `cheque` - Cheque
        * `paypal` - PayPal
        * `stripe` - Stripe
        * `square` - Square
        * `eftpos` - EFTPOS
        * `other` - Other
    IncomeStatusEnum:
      enum:
      - expected
      - pending
      - received
      - deposited
      - cancelled
      - refunded
      type: string
      description: |-
        * `expected` - Expected
        * `pending` - Pending
        * `received` - Received
        * `deposited` - Deposited
        * `cancelled` - Cancelled
        * `refunded` - Refunded
    PaginatedAddressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PaginatedAssetList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    PaginatedAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
    PaginatedAuditLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
    PaginatedAuditionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Audition'
    PaginatedContextKeyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContextKey'
    PaginatedContextList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Context'
    PaginatedCostCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CostCategory'
    PaginatedCountryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedDiscountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
    PaginatedDiscountTicketTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiscountTicketType'
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedDocumentRepoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentRepo'
    PaginatedDocumentTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTag'
    PaginatedDocumentVersionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DocumentVersion'
    PaginatedEmployeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    PaginatedEmployeeQualificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeQualification'
    PaginatedEmploymentTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentType'
    PaginatedExpenseAttachmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseAttachment'
    PaginatedExpenseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
    PaginatedFeedbackList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feedback'
    PaginatedFolderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
    PaginatedFormFieldList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FormField'
    PaginatedFormList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Form'
    PaginatedIncomeCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncomeCategory'
    PaginatedIncomeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Income'
    PaginatedPerformanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Performance'
    PaginatedPermissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PaginatedProductionCategoryAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionCategoryAssignment'
    PaginatedProductionCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionCategory'
    PaginatedProductionCostCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionCostCategory'
    PaginatedProductionIncomeCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionIncomeCategory'
    PaginatedProductionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Production'
    PaginatedProductionMemberList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionMember'
    PaginatedProductionRoleAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionRoleAssignment'
    PaginatedProductionVenueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductionVenue'
    PaginatedPurchaseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'
    PaginatedQualificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Qualification'
    PaginatedRehearsalList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Rehearsal'
    PaginatedRehearsalParticipantList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RehearsalParticipant'
    PaginatedReimbursementList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reimbursement'
    PaginatedRoleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    PaginatedRolePermissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RolePermission'
    PaginatedSectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Section'
    PaginatedSectionSeatList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SectionSeat'
    PaginatedSignupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Signup'
    PaginatedSlotList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Slot'
    PaginatedStateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/State'
    PaginatedSubmissionFieldValueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionFieldValue'
    PaginatedSubmissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Submission'
    PaginatedTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedTicketList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
    PaginatedTicketTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketType'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserRoleAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserRoleAssignment'
    PaginatedVendorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
    PaginatedVenueCapacityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VenueCapacity'
    PaginatedVenueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Venue'
    PaginatedVenueTagAssignmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VenueTagAssignment'
    PaginatedVenueTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VenueTag'
    PaginatedWorkLocationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkLocation'
    PatchedAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        line_1:
          type: string
          description: Street address or PO Box
          maxLength: 255
        line_2:
          type: string
          description: Additional address information, e.g., apartment, unit
          maxLength: 255
        city:
          type: string
          maxLength: 100
        suburb:
          type: string
          maxLength: 100
        postal_code:
          type: string
          maxLength: 20
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        state:
          type:
          - integer
          - 'null'
        country:
          type: integer
    PatchedAsset:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the asset
          maxLength: 255
        type:
          allOf:
          - $ref: '#/components/schemas/AssetTypeEnum'
          description: |-
            Type of the asset, either company or personal

            * `company` - Company Property
            * `personal` - Personal Property
        description:
          type:
          - string
          - 'null'
          description: Description of the asset
        notes:
          type:
          - string
          - 'null'
          description: Additional notes about the asset
        value:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Monetary value of the asset
        condition:
          allOf:
          - $ref: '#/components/schemas/ConditionEnum'
          description: |-
            Condition of the asset

            * `new` - New
            * `good` - Good
            * `fair` - Fair
            * `poor` - Poor
            * `damaged` - Damaged
            * `out_of_service` - Out of Service
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        owning_user:
          type:
          - integer
          - 'null'
          description: User who owns the asset
    PatchedAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        start_date:
          type: string
          format: date-time
          description: Date and time when the asset was assigned
        end_date:
          type:
          - string
          - 'null'
          format: date-time
          description: Date and time when the asset was returned
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        asset:
          type: integer
          description: The asset being assigned
        user:
          type:
          - integer
          - 'null'
          description: User to whom the asset is assigned
        production:
          type:
          - integer
          - 'null'
          description: Production associated with the asset assignment
    PatchedAuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        timestamp:
          type: string
          format: date-time
          readOnly: true
        action_type:
          $ref: '#/components/schemas/ActionTypeEnum'
        description:
          type: string
        target_object:
          type: string
          maxLength: 255
        before_state: {}
        after_state: {}
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        user:
          type: integer
    PatchedAudition:
      type: object
      description: Serializer for the Audition model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the audition
          maxLength: 255
        description:
          type: string
          description: Description of the audition
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type:
          - integer
          - 'null'
          description: Venue for the audition
    PatchedContext:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        value:
          type: string
          maxLength: 255
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        key:
          type: integer
    PatchedContextKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        app_name:
          type: string
          maxLength: 255
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
    PatchedCostCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        line_code:
          type:
          - string
          - 'null'
          maxLength: 50
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
    PatchedCountry:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        iso_code:
          type: string
          description: ISO 3166-1 alpha-3 country code
          maxLength: 3
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the discount, e.g., Early Bird, Student Discount, etc.
          maxLength: 100
        code:
          type: string
          description: Unique code for the discount, used by customers to apply the
            discount.
          maxLength: 50
        description:
          type: string
          description: Description of the discount, if any.
        discount_type:
          allOf:
          - $ref: '#/components/schemas/DiscountTypeEnum'
          description: |-
            Type of discount, e.g., Percentage Off, Fixed Amount Off, Buy One Get One.

            * `percentage` - Percentage Off
            * `fixed_amount` - Fixed Amount Off
            * `bogo` - Buy One Get One
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Value of the discount. For percentage discounts, this is the
            percentage off. For fixed amount discounts, this is the amount off.
        minimum_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Minimum value of the order for the discount to apply.
        minimum_tickets:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Minimum number of tickets required for the discount to apply.
            0 means no minimum.
        global_limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Global limit for the discount, i.e., maximum number of times
            this discount can be used across all venues. null means unlimited. 0 means
            no uses allowed.
        customer_limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limit for each customer, i.e., maximum number of times a single
            customer can use this discount. null means unlimited. 0 means no uses
            allowed.
        valid_from:
          type:
          - string
          - 'null'
          format: date-time
          description: Start date and time for the discount to be valid. If null,
            the discount is valid immediately.
        valid_until:
          type:
          - string
          - 'null'
          format: date-time
          description: End date and time for the discount to be valid. If null, the
            discount is valid indefinitely.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
          description: The production this discount applies to.
        production_venue:
          type:
          - integer
          - 'null'
          description: If the discount is specific to a venue, this field will be
            set. If null, the discount applies to all venues for the production.
        applicable_ticket_types:
          type: array
          items:
            type: integer
          readOnly: true
          description: Ticket types to which this discount applies. If empty, the
            discount applies to all ticket types for the production.
    PatchedDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/DocumentStatusEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type:
          - integer
          - 'null'
        author:
          type:
          - integer
          - 'null'
        repo:
          type: integer
        folder:
          type:
          - integer
          - 'null'
        superseded_by:
          type:
          - integer
          - 'null'
          description: The document that supersedes this one, if any
        tags:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedDocumentRepo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        code:
          type: string
          maxLength: 50
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedDocumentVersion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        version:
          type: integer
          readOnly: true
          description: The version of the document
        file_url:
          type: string
          format: uri
          description: URL to the document file
          maxLength: 500
        version_notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        document:
          type: integer
    PatchedEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type:
          - string
          - 'null'
          maxLength: 128
        postal_address:
          type: string
        city:
          type: string
          maxLength: 100
        postcode:
          type: string
          maxLength: 10
        date_of_birth:
          type:
          - string
          - 'null'
          format: date
        hire_date:
          type:
          - string
          - 'null'
          format: date
        position:
          type: string
          maxLength: 100
        hourly_rate:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        salary:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        tax_file_number:
          type: string
          maxLength: 15
        emergency_contact_name:
          type: string
          maxLength: 100
        emergency_contact_relationship:
          type: string
          maxLength: 50
        emergency_contact_phone:
          type: string
          maxLength: 128
        is_active:
          type: boolean
        probation_end_date:
          type:
          - string
          - 'null'
          format: date
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        user:
          type: integer
        employee_address:
          type:
          - integer
          - 'null'
        state:
          type:
          - integer
          - 'null'
        country:
          type:
          - integer
          - 'null'
        employment_type:
          type:
          - integer
          - 'null'
        work_locations:
          type: array
          items:
            type: integer
        qualifications:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedEmployeeQualification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        issue_date:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        employee:
          type: integer
        qualification:
          type: integer
    PatchedEmploymentType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 50
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        approved_date_time:
          type:
          - string
          - 'null'
          format: date-time
        status:
          $ref: '#/components/schemas/ExpenseStatusEnum'
        title:
          type: string
          maxLength: 200
        description:
          type: string
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        expense_date_time:
          type: string
          format: date-time
        payment_method:
          $ref: '#/components/schemas/ExpensePaymentMethodEnum'
        notes:
          type: string
        receipt_number:
          type: string
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        purchaser:
          type: integer
        approver:
          type:
          - integer
          - 'null'
        category:
          type:
          - integer
          - 'null'
          description: The Expense Category this expense belongs to. Either this or
            `prod_category` must be set (but not both).
        prod_category:
          type:
          - integer
          - 'null'
          description: The Production Expense Category this expense belongs to (if
            the expense belongs to a production). Either this or `category` must be
            set (but not both).
        vendor:
          type:
          - integer
          - 'null'
    PatchedExpenseAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        description:
          type: string
          maxLength: 255
        file_uri:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 500
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        expense:
          type: integer
        uploaded_by:
          type:
          - integer
          - 'null'
    PatchedFeedback:
      type: object
      description: Serializer for the Feedback model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        notes:
          type:
          - string
          - 'null'
          description: Feedback notes. Supports markdown.
        score:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          description: If the panel wishes to use scores, they can enter them here.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        signup:
          type: integer
        reviewer:
          type:
          - integer
          - 'null'
          description: User who provided the feedback. Can be null if feedback is
            anonymous.
    PatchedFolder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subfolders:
          type: array
          items:
            $ref: '#/components/schemas/Subfolder'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        repo:
          type: integer
        parent:
          type:
          - integer
          - 'null'
    PatchedForm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          maxLength: 200
        description:
          type: string
        open_date_time:
          type:
          - string
          - 'null'
          format: date-time
        close_date_time:
          type:
          - string
          - 'null'
          format: date-time
        max_submissions:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        max_individual_submissions:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        success_message:
          type: string
        is_template:
          type: boolean
        is_active:
          type: boolean
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type:
          - integer
          - 'null'
          description: If this form is associated with a production, select it here.
    PatchedFormField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        configuration:
          oneOf:
          - type: object
            title: Single Line Text Configuration
            properties:
              max_length:
                default: 255
                description: Maximum length of the text
                maximum: 1000
                title: Max Length
                type: integer
              min_length:
                default: 0
                description: Minimum length of the text
                minimum: 0
                title: Min Length
                type: integer
              lines:
                default: 1
                description: Number of lines for the text input
                title: Lines
                type: integer
              pattern:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Regex pattern for validation
                title: Pattern
            required: []
          - type: object
            title: Multiple Line Text Configuration
            properties:
              max_length:
                default: 5000
                description: Maximum length of the text
                maximum: 10000
                title: Max Length
                type: integer
              min_length:
                default: 0
                description: Minimum length of the text
                minimum: 0
                title: Min Length
                type: integer
              lines:
                default: 3
                description: Number of lines for the text input
                title: Lines
                type: integer
              rich_text:
                default: false
                description: Whether rich text formatting is allowed
                title: Rich Text
                type: boolean
            required: []
          - type: object
            title: Multiple Choice Configuration
            properties:
              options:
                description: List of options for the multiple choice field
                items:
                  type: string
                minItems: 1
                title: Options
                type: array
              allow_multiple:
                default: false
                description: Whether multiple selections are allowed
                title: Allow Multiple
                type: boolean
              allow_other:
                default: false
                description: Whether an 'Other' option is allowed for custom input
                title: Allow Other
                type: boolean
              other_placeholder:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Placeholder text for the 'Other' input field
                title: Other Placeholder
            required:
            - options
          - type: object
            title: Floating Point Number Configuration
            properties:
              min_value:
                anyOf:
                - minimum: 0
                  type: number
                - type: 'null'
                default: null
                description: Minimum value allowed
                title: Min Value
              max_value:
                anyOf:
                - maximum: 1000000
                  type: number
                - type: 'null'
                default: null
                description: Maximum value allowed
                title: Max Value
              step:
                default: 1.0
                description: Step increment for the number input
                exclusiveMinimum: 0
                title: Step
                type: number
            required: []
          - type: object
            title: Decimal Number Configuration
            properties:
              min_value:
                anyOf:
                - minimum: 0.0
                  type: number
                - type: string
                - type: 'null'
                default: null
                description: Minimum value allowed
                title: Min Value
              max_value:
                anyOf:
                - maximum: 1000000.0
                  type: number
                - type: string
                - type: 'null'
                default: null
                description: Maximum value allowed
                title: Max Value
              step:
                default: 0.01
                description: Step increment for the decimal number input
                exclusiveMinimum: 0
                title: Step
                type: number
              decimal_places:
                anyOf:
                - maximum: 6
                  minimum: 0
                  type: integer
                - type: 'null'
                default: 2
                description: Number of decimal places allowed
                title: Decimal Places
            required: []
          - type: object
            title: Information Display Configuration
            properties:
              content:
                description: Content to display in the information field
                title: Content
                type: string
            required:
            - content
          - type: object
            title: File Upload Configuration
            properties:
              allowed_file_types:
                description: List of allowed file types (e.g., 'image', 'document',
                  'video', 'audio', 'all')
                items:
                  $ref: '#/components/schemas/FileType'
                title: Allowed File Types
                type: array
              max_file_size:
                default: 10485760
                description: Maximum file size in bytes (default is 10MB, cannot be
                  more than 100MB)
                maximum: 104857600
                minimum: 0
                title: Max File Size
                type: integer
              allow_multiple:
                default: false
                description: Whether multiple file uploads are allowed
                title: Allow Multiple
                type: boolean
            required: []
          - type: object
            title: Slider Configuration
            properties:
              min_value:
                anyOf:
                - minimum: 0.0
                  type: number
                - type: string
                default: 0.0
                description: Minimum value for the slider
                title: Min Value
              max_value:
                anyOf:
                - maximum: 1000.0
                  type: number
                - type: string
                default: 10.0
                description: Maximum value for the slider
                title: Max Value
              step:
                anyOf:
                - exclusiveMinimum: 0.0
                  type: number
                - type: string
                default: 1.0
                description: Step increment for the slider
                title: Step
            required: []
          - type: object
            title: Date Picker Configuration
            properties:
              min_date:
                anyOf:
                - format: date
                  type: string
                - type: 'null'
                default: null
                description: Minimum date allowed in YYYY-MM-DD format
                title: Min Date
              max_date:
                anyOf:
                - format: date
                  type: string
                - type: 'null'
                default: null
                description: Maximum date allowed in YYYY-MM-DD format
                title: Max Date
            required: []
          - type: object
            title: Time Picker Configuration
            properties:
              min_time:
                anyOf:
                - format: time
                  type: string
                - type: 'null'
                default: null
                description: Minimum time allowed in HH:MM format
                title: Min Time
              max_time:
                anyOf:
                - format: time
                  type: string
                - type: 'null'
                default: null
                description: Maximum time allowed in HH:MM format
                title: Max Time
            required: []
          - type: object
            title: Date and Time Picker Configuration
            properties:
              min_datetime:
                anyOf:
                - format: date-time
                  type: string
                - type: 'null'
                default: null
                description: Minimum date and time allowed in ISO format
                title: Min Datetime
              max_datetime:
                anyOf:
                - format: date-time
                  type: string
                - type: 'null'
                default: null
                description: Maximum date and time allowed in ISO format
                title: Max Datetime
            required: []
          - type: object
            title: Email Address Configuration
            properties:
              allowed_domains:
                anyOf:
                - items:
                    type: string
                  type: array
                - type: 'null'
                default: null
                description: List of allowed email domains (e.g., ['example.com',
                  'test.com'])
                title: Allowed Domains
            required: []
          - type: object
            title: Phone Number Configuration
            properties:
              allowed_countries:
                anyOf:
                - items:
                    type: string
                  type: array
                - type: 'null'
                default: null
                description: List of allowed country codes for phone numbers (e.g.,
                  ['US', 'IN'])
                title: Allowed Countries
            required: []
          - type: object
            title: URL Configuration
            properties:
              allowed_schemes:
                default:
                - http
                - https
                description: List of allowed URL schemes (e.g., ['http', 'https'])
                items:
                  type: string
                title: Allowed Schemes
                type: array
              allow_custom_schemes:
                default: false
                description: Whether to allow custom URL schemes
                title: Allow Custom Schemes
                type: boolean
            required: []
          - type: object
            title: Single Checkbox Configuration
            properties:
              label:
                description: Label for the checkbox
                title: Label
                type: string
              is_checked:
                default: false
                description: Whether the checkbox is checked by default
                title: Is Checked
                type: boolean
            required:
            - label
          - type: object
            title: Section Header Configuration
            properties:
              title:
                default: null
                description: Title of the section
                title: Title
                type: string
              description:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Description of the section
                title: Description
            required: []
          - type: object
            title: Star Rating Configuration
            properties:
              max_rating:
                default: 5
                description: Maximum rating value (default is 5, can be between 1
                  and 10)
                maximum: 10
                minimum: 1
                title: Max Rating
                type: integer
              allow_half_stars:
                default: false
                description: Whether to allow half-star ratings
                title: Allow Half Stars
                type: boolean
            required: []
          - type: object
            title: Digital Signature Configuration
            properties:
              allow_drawing:
                default: true
                description: Whether users can draw their signature
                title: Allow Drawing
                type: boolean
              allow_upload:
                default: false
                description: Whether users can upload an image of their signature
                title: Allow Upload
                type: boolean
              allow_typing:
                default: false
                description: Whether users can type their signature
                title: Allow Typing
                type: boolean
              max_file_size:
                default: 5242880
                description: Maximum file size for uploaded signatures in bytes (default
                  is 5MB, cannot be more than 10MB)
                maximum: 10485760
                minimum: 0
                title: Max File Size
                type: integer
            required: []
          - type: object
            title: External Signature Configuration
            properties:
              service:
                $ref: '#/components/schemas/ExternalSignatureService'
                description: External signature service to use (e.g., 'dropboxsign',
                  'docusign', 'adobe', etc.)
              service_url:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: URL of the external signature service (if applicable)
                title: Service Url
              form_id:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Form ID for the external signature service (if required)
                title: Form Id
              template_id:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Template ID for the external signature service (if required)
                title: Template Id
              client_id:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Client ID for the external signature service (if required)
                title: Client Id
              client_secret:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: Client secret for the external signature service (if
                  required)
                title: Client Secret
              api_key:
                anyOf:
                - type: string
                - type: 'null'
                default: null
                description: API key for the external signature service (if required)
                title: Api Key
              allow_drawing:
                default: true
                description: Whether users can draw their signature using the external
                  service
                title: Allow Drawing
                type: boolean
              allow_upload:
                default: false
                description: Whether users can upload an image of their signature
                  using the external service
                title: Allow Upload
                type: boolean
              allow_typing:
                default: false
                description: Whether users can type their signature using the external
                  service
                title: Allow Typing
                type: boolean
            required:
            - service
          description: Field configuration object. The structure depends on the field
            type.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Order of the field in the form, used for rendering and display.
        type:
          allOf:
          - $ref: '#/components/schemas/FormFieldTypeEnum'
          description: |-
            Type of the form field, determines how it will be rendered and validated.

            * `short_text` - Single Line Text
            * `long_text` - Multiple Line Text
            * `multi_choice` - Multiple Choice
            * `number` - Floating Point Number
            * `decimal_number` - Decimal Number
            * `info` - Information Display
            * `file` - File Upload
            * `slider` - Slider
            * `date` - Date Picker
            * `time` - Time Picker
            * `datetime` - Date and Time Picker
            * `email` - Email Address
            * `phone` - Phone Number
            * `url` - URL
            * `checkbox` - Single Checkbox
            * `section_header` - Section Header
            * `rating` - Star Rating
            * `signature` - Digital Signature
            * `external_signature` - External Signature
        title:
          type: string
          description: Title of the form field, displayed to users.
          maxLength: 200
        description:
          type: string
          description: Optional description for the field, displayed to users.
        placeholder:
          type: string
          description: Placeholder text for the field, displayed when the field is
            empty. Not applicable for all field types.
          maxLength: 200
        is_required:
          type: boolean
          description: Whether this field is required to be filled out by the user.
            If true, the form cannot be submitted without a value for this field.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        form:
          type: integer
    PatchedIncome:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          maxLength: 200
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        income_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/IncomeStatusEnum'
        payment_method:
          $ref: '#/components/schemas/IncomePaymentMethodEnum'
        source_name:
          type: string
          maxLength: 200
        source_contact:
          type: string
          maxLength: 200
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        gross_amount:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        fees_amount:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        tax_amount:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        reference_number:
          type: string
          maxLength: 100
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        category:
          type:
          - integer
          - 'null'
          description: The Income Category this income belongs to. Either this or
            `prod_category` must be set (but not both).
        prod_category:
          type:
          - integer
          - 'null'
          description: The Production Income Category this income belongs to (if the
            income belongs to a production). Either this or `category` must be set
            (but not both).
    PatchedIncomeCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        type:
          $ref: '#/components/schemas/IncomeCategoryTypeEnum'
        line_code:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        name:
          type: string
          maxLength: 100
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
    PatchedPerformance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        date:
          type: string
          format: date-time
        notes:
          type: string
        status:
          $ref: '#/components/schemas/PerformanceStatusEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type:
          - integer
          - 'null'
          description: The venue where the performance will take place.
    PatchedPermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
    PatchedProduction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type:
          - string
          - 'null'
          format: date-time
        end_date:
          type:
          - string
          - 'null'
          format: date-time
        status:
          $ref: '#/components/schemas/ProductionStatusEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        venue:
          type:
          - integer
          - 'null'
          description: The primary venue for the production, not necessarily where
            all performances will take place.
        director:
          type:
          - integer
          - 'null'
    PatchedProductionCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
          description: Description of the production category.
        slug:
          type: string
          description: A URL-friendly version of the category name.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
          description: Indicates if the category is currently active.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
          description: Parent category for hierarchical categorisation.
    PatchedProductionCategoryAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        is_primary:
          type: boolean
          description: Indicates if this is the primary category for the production.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        category:
          type: integer
    PatchedProductionCostCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        line_code:
          type:
          - string
          - 'null'
          maxLength: 50
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        company_cost_category:
          type:
          - integer
          - 'null'
    PatchedProductionIncomeCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        line_code:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        income_category:
          type:
          - integer
          - 'null'
    PatchedProductionMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        member:
          type: integer
    PatchedProductionRoleAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        role:
          $ref: '#/components/schemas/RoleEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        member:
          type: integer
    PatchedProductionVenue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type: integer
    PatchedPurchase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          description: Title for the purchase, e.g., 'VIP Tickets for Opening Night'.
          maxLength: 200
        customer_first_name:
          type: string
          description: First name of the customer making the purchase.
          maxLength: 100
        customer_last_name:
          type: string
          description: Last name of the customer making the purchase.
          maxLength: 100
        customer_email:
          type: string
          format: email
          description: Email address of the customer making the purchase.
          maxLength: 254
        customer_phone:
          type: string
          description: Phone number of the customer making the purchase.
          maxLength: 20
        customer_address:
          type: string
          description: Address of the customer making the purchase.
        purchase_method:
          allOf:
          - $ref: '#/components/schemas/PurchaseMethodEnum'
          description: |-
            Method of purchase, e.g., Online, In Person, Box Office, Phone, Mobile App.

            * `online` - Online
            * `in_person` - In Person
            * `box_office` - Box Office
            * `phone` - Phone
            * `mobile_app` - Mobile App
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          description: |-
            Currency for the purchase amount.

            * `AUD` - AUD - Australian Dollar
            * `CAD` - CAD - Canadian Dollar
            * `EUR` - EUR - Euro
            * `GBP` - GBP - British Pound
            * `JPY` - JPY - Japanese Yen
            * `NZD` - NZD - New Zealand Dollar
            * `USD` - USD - United States Dollar
        subtotal_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Subtotal amount for the purchase before any discounts.
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Amount of discount applied to the purchase. 0 if no discount
            was applied.
        booking_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Booking fee applied to the purchase. 0 if no booking fee was
            applied.
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Total amount for the purchase paid by the customer, after any
            discounts.
        payment_reference:
          type: string
          description: Payment reference or transaction ID for the purchase, if applicable.
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        discount_applied:
          type:
          - integer
          - 'null'
          description: Discount applied to this purchase.
    PatchedQualification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedRehearsal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
        notes:
          type: string
          description: Rehearsal Notes, e.g. what scene are being rehearsed, what
            is needed, etc. Support Markdown formatting.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type:
          - integer
          - 'null'
    PatchedRehearsalParticipant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        is_required:
          type: boolean
          description: Indicates if the participant is required for this rehearsal
            (as some members may be added to a rehearsal but not be required to attend).
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        rehearsal:
          type: integer
        member:
          type: integer
    PatchedReimbursement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        approved_date_time:
          type: string
          format: date-time
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        scheduled_date:
          type:
          - string
          - 'null'
          format: date
        processed_date:
          type:
          - string
          - 'null'
          format: date
        status:
          $ref: '#/components/schemas/ReimbursementStatusEnum'
        payment_reference:
          type: string
          maxLength: 100
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        payee:
          type:
          - integer
          - 'null'
        approver:
          type:
          - integer
          - 'null'
        expense:
          type:
          - integer
          - 'null'
    PatchedRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
        permissions:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedRolePermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        role:
          type: integer
        permission:
          type: integer
        context:
          type:
          - integer
          - 'null'
    PatchedSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        section_code:
          type: string
          description: 'Section Code, example: L-MEZ, ORCH, R-BALC, etc.'
          maxLength: 20
        name:
          type: string
          description: 'Section Name, example: Left Mezzanine, Orchestra, Right Balcony,
            etc.'
          maxLength: 100
        floor:
          type: string
          description: 'Floor level, example: Ground, 2nd Floor, etc.'
          maxLength: 20
        description:
          type: string
          description: Description of the section, if any.
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Sort order for displaying sections, lower numbers appear first.
        seating_system:
          allOf:
          - $ref: '#/components/schemas/SeatingSystemEnum'
          description: |-
            Seating system for the section, e.g., General Admission, Reserved Seating.

            * `none` - General Admission
            * `seated` - Reserved Seating
        limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Maximum number of seats available in this section. null means
            unlimited. 0 means no seats available. Required for General Admission
            sections, ignored for Reserved Seating sections.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production_venue:
          type: integer
          description: The production & venue this section belongs to
    PatchedSectionSeat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        seat_code:
          type: string
          description: 'Seat Code, example: 1, 2, 3 etc. This should be unique within
            the row.'
          maxLength: 20
        row:
          type: string
          description: 'Row identifier for the seat, example: A, B, C, etc.'
          maxLength: 10
        notes:
          type: string
          description: Additional notes about the seat, if any.
        obstructed_view:
          type: boolean
          description: Indicates if the seat has an obstructed view. True if obstructed,
            False otherwise. Add obstruction notes in the notes field.
        display_x_position:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: X position for display purposes, used for layout rendering.
        display_y_position:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Y position for display purposes, used for layout rendering.
        accessible:
          type: boolean
          description: Indicates if the seat is accessible for individuals with disabilities.
            Include accessibility notes in the notes field.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedSignup:
      type: object
      description: Serializer for the Signup model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        first_name:
          type:
          - string
          - 'null'
          description: First name of the user signing up
          maxLength: 255
        last_name:
          type:
          - string
          - 'null'
          description: Last name of the user signing up
          maxLength: 255
        email:
          type:
          - string
          - 'null'
          format: email
          description: Email address of the user signing up
          maxLength: 254
        phone:
          type:
          - string
          - 'null'
          description: Phone number of the user signing up
          maxLength: 20
        notes:
          type:
          - string
          - 'null'
          description: Notes for the signup. Supports markdown.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        slot:
          type: integer
        user:
          type:
          - integer
          - 'null'
          description: If the participant has an account, this will be set to the
            user. If not, it will be null and the first_name, last_name, email, and
            phone fields will be used to identify the participant.
    PatchedSlot:
      type: object
      description: Serializer for the Slot model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type:
          - string
          - 'null'
          description: Name of the slot
          maxLength: 255
        start_time:
          type: string
          format: date-time
          description: Start time of the slot
        end_time:
          type: string
          format: date-time
          description: End time of the slot
        limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limit of participants who can register for the slot. Leave
            null/none to disable limit.
        notes:
          type:
          - string
          - 'null'
          description: Notes for the slot. Supports markdown.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        audition:
          type: integer
    PatchedState:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        code:
          type: string
          description: Abbreviation or code for the state/region
          maxLength: 10
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        country:
          type: integer
    PatchedSubmission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        submitted_date_time:
          type: string
          format: date-time
          readOnly: true
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        form:
          type: integer
        member:
          type:
          - integer
          - 'null'
    PatchedSubmissionFieldValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        text_data:
          type: string
        number_data:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,5})?$
        date_data:
          type:
          - string
          - 'null'
          format: date
        datetime_data:
          type:
          - string
          - 'null'
          format: date-time
        time_data:
          type:
          - string
          - 'null'
          format: time
        choice_data:
          type: string
          description: Stores selected choices for multi-choice fields as a comma-separated
            string.
        phone_data:
          type:
          - string
          - 'null'
          maxLength: 20
        url_data:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 500
        email_data:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        file_uri:
          type:
          - string
          - 'null'
          format: uri
          description: URI of the uploaded file, if applicable. Signature fields will
            store the signature image URI here.
          maxLength: 500
        boolean_data:
          type: boolean
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        submission:
          type: integer
        form_field:
          type: integer
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 50
        colour:
          type:
          - string
          - 'null'
          description: 'Hex colour code without the # symbol'
          maxLength: 6
        description:
          type:
          - string
          - 'null'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        section_seat:
          allOf:
          - $ref: '#/components/schemas/SectionSeat'
          readOnly: true
        ticket_type:
          allOf:
          - $ref: '#/components/schemas/TicketType'
          readOnly: true
        purchase:
          allOf:
          - $ref: '#/components/schemas/Purchase'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        ticket_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the ticket, used for tracking and validation.
        status:
          allOf:
          - $ref: '#/components/schemas/TicketStatusEnum'
          description: |-
            Current status of the ticket.

            * `active` - Active
            * `used` - Used
            * `refunded` - Refunded
            * `cancelled` - Cancelled
            * `transferred` - Transferred
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price of the ticket at the time of purchase.
        checked_in_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Timestamp when the ticket was checked in. Null if not checked
            in.
        checked_in_by_alias:
          type: string
          description: Alias used by the user who checked in the ticket. Useful for
            tracking check-ins by staff or volunteers who may not have a user account,
            or integrations which use a system account.
          maxLength: 100
        checked_in_location:
          type: string
          description: Location where the ticket was checked in. Useful for tracking
            check-ins at different points of entry or systems.
          maxLength: 200
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        performance:
          type: integer
          description: The performance for which this ticket is valid.
        section:
          type: integer
          description: The section for this ticket
        seat:
          type:
          - integer
          - 'null'
          description: The specific seat for this ticket.
        checked_in_by_user:
          type:
          - integer
          - 'null'
          description: User who checked in the ticket. Null if not checked in.
    PatchedTicketType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        external_name:
          type: string
          description: Name of the ticket type, e.g., General Admission, VIP, etc.
          maxLength: 100
        internal_name:
          type: string
          description: Internal name for the ticket type, used for system references.
          maxLength: 100
        description:
          type: string
          description: Description of the ticket type, if any.
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price of the ticket type.
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          description: |-
            Currency for the ticket price, e.g. AUD, USD, EUR, etc.

            * `AUD` - AUD - Australian Dollar
            * `CAD` - CAD - Canadian Dollar
            * `EUR` - EUR - Euro
            * `GBP` - GBP - British Pound
            * `JPY` - JPY - Japanese Yen
            * `NZD` - NZD - New Zealand Dollar
            * `USD` - USD - United States Dollar
        limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Maximum number of tickets available for this type. null means
            unlimited. 0 means no tickets available.
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Sort order for displaying ticket types, lower numbers appear
            first.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production_venue:
          type: integer
          description: The production venue this ticket type belongs to.
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type:
          - string
          - 'null'
          format: date-time
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
        ulid:
          type:
          - string
          - 'null'
          maxLength: 26
        user_sso_id:
          type:
          - string
          - 'null'
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type:
          - string
          - 'null'
          maxLength: 255
        date_of_birth:
          type:
          - string
          - 'null'
          format: date
        email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        phone:
          type:
          - string
          - 'null'
          maxLength: 25
        is_active:
          type: boolean
        tenant:
          type: integer
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PatchedUserRoleAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        user:
          type: integer
        role:
          type: integer
    PatchedVendor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        address:
          type:
          - string
          - 'null'
          maxLength: 255
        notes:
          type: string
        contact_name:
          type:
          - string
          - 'null'
          maxLength: 255
        contact_email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        contact_phone:
          type:
          - string
          - 'null'
          maxLength: 20
        website:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 200
        abn:
          type:
          - string
          - 'null'
          maxLength: 255
        payment_terms:
          type:
          - string
          - 'null'
          maxLength: 255
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedVenue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the venue
          maxLength: 255
        notes:
          type: string
          description: Additional notes about the venue
        contact_name:
          type: string
          description: Contact person for the venue
          maxLength: 100
        contact_email:
          type: string
          format: email
          description: Email address for the venue contact
          maxLength: 254
        contact_phone:
          type: string
          description: Contact person for the venue contact
          maxLength: 128
        is_active:
          type: boolean
          description: Is the venue currently active?
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        tags:
          type: array
          items:
            type: integer
          readOnly: true
          description: Tags associated with the venue
    PatchedVenueCapacity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        seating_mode:
          type: string
          description: Seating mode of the venue
          maxLength: 100
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Total seating capacity of the venue in this mode
        notes:
          type: string
          description: Additional notes about the capacity
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        venue:
          type: integer
          description: Venue for which the capacity is defined
    PatchedVenueTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the tag
          maxLength: 100
        description:
          type: string
          description: Description of the tag
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
    PatchedVenueTagAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        venue:
          type: integer
          description: Venue to which the tag is assigned
        tag:
          type: integer
          description: Tag assigned to the venue
    PatchedWorkLocation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        address:
          type: integer
    Performance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        date:
          type: string
          format: date-time
        notes:
          type: string
        status:
          $ref: '#/components/schemas/PerformanceStatusEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type:
          - integer
          - 'null'
          description: The venue where the performance will take place.
      required:
      - created_at
      - created_by
      - date
      - id
      - production
      - tenant
      - updated_at
    PerformanceStatusEnum:
      enum:
      - scheduled
      - cancelled
      - postponed
      - completed
      type: string
      description: |-
        * `scheduled` - Scheduled
        * `cancelled` - Cancelled
        * `postponed` - Postponed
        * `completed` - Completed
    Permission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - id
      - name
      - tenant
      - updated_at
    Production:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type:
          - string
          - 'null'
          format: date-time
        end_date:
          type:
          - string
          - 'null'
          format: date-time
        status:
          $ref: '#/components/schemas/ProductionStatusEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        venue:
          type:
          - integer
          - 'null'
          description: The primary venue for the production, not necessarily where
            all performances will take place.
        director:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    ProductionCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
          description: Description of the production category.
        slug:
          type: string
          description: A URL-friendly version of the category name.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
          description: Indicates if the category is currently active.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
          description: Parent category for hierarchical categorisation.
      required:
      - created_at
      - created_by
      - id
      - name
      - slug
      - tenant
      - updated_at
    ProductionCategoryAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        is_primary:
          type: boolean
          description: Indicates if this is the primary category for the production.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        category:
          type: integer
      required:
      - category
      - created_at
      - created_by
      - id
      - production
      - tenant
      - updated_at
    ProductionCostCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        description:
          type: string
        line_code:
          type:
          - string
          - 'null'
          maxLength: 50
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        company_cost_category:
          type:
          - integer
          - 'null'
      required:
      - budget
      - created_at
      - created_by
      - id
      - name
      - production
      - tenant
      - updated_at
    ProductionIncomeCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        line_code:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        budget:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        income_category:
          type:
          - integer
          - 'null'
      required:
      - budget
      - created_at
      - created_by
      - id
      - line_code
      - name
      - production
      - tenant
      - updated_at
    ProductionMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        member:
          type: integer
      required:
      - created_at
      - created_by
      - id
      - member
      - production
      - tenant
      - updated_at
    ProductionRoleAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        role:
          $ref: '#/components/schemas/RoleEnum'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        member:
          type: integer
      required:
      - created_at
      - created_by
      - id
      - member
      - production
      - role
      - tenant
      - updated_at
    ProductionStatusEnum:
      enum:
      - planning
      - auditions
      - rehearsals
      - tech
      - performances
      - completed
      - cancelled
      - archived
      type: string
      description: |-
        * `planning` - Planning
        * `auditions` - Auditions Open
        * `rehearsals` - Rehearsals
        * `tech` - Tech Week
        * `performances` - Performance Run
        * `completed` - Completed
        * `cancelled` - Cancelled
        * `archived` - Archived
    ProductionVenue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type: integer
      required:
      - created_at
      - created_by
      - id
      - production
      - tenant
      - updated_at
      - venue
    Purchase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        title:
          type: string
          description: Title for the purchase, e.g., 'VIP Tickets for Opening Night'.
          maxLength: 200
        customer_first_name:
          type: string
          description: First name of the customer making the purchase.
          maxLength: 100
        customer_last_name:
          type: string
          description: Last name of the customer making the purchase.
          maxLength: 100
        customer_email:
          type: string
          format: email
          description: Email address of the customer making the purchase.
          maxLength: 254
        customer_phone:
          type: string
          description: Phone number of the customer making the purchase.
          maxLength: 20
        customer_address:
          type: string
          description: Address of the customer making the purchase.
        purchase_method:
          allOf:
          - $ref: '#/components/schemas/PurchaseMethodEnum'
          description: |-
            Method of purchase, e.g., Online, In Person, Box Office, Phone, Mobile App.

            * `online` - Online
            * `in_person` - In Person
            * `box_office` - Box Office
            * `phone` - Phone
            * `mobile_app` - Mobile App
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          description: |-
            Currency for the purchase amount.

            * `AUD` - AUD - Australian Dollar
            * `CAD` - CAD - Canadian Dollar
            * `EUR` - EUR - Euro
            * `GBP` - GBP - British Pound
            * `JPY` - JPY - Japanese Yen
            * `NZD` - NZD - New Zealand Dollar
            * `USD` - USD - United States Dollar
        subtotal_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Subtotal amount for the purchase before any discounts.
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Amount of discount applied to the purchase. 0 if no discount
            was applied.
        booking_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Booking fee applied to the purchase. 0 if no booking fee was
            applied.
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
          description: Total amount for the purchase paid by the customer, after any
            discounts.
        payment_reference:
          type: string
          description: Payment reference or transaction ID for the purchase, if applicable.
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        discount_applied:
          type:
          - integer
          - 'null'
          description: Discount applied to this purchase.
      required:
      - created_at
      - created_by
      - customer_address
      - customer_email
      - customer_first_name
      - id
      - subtotal_amount
      - tenant
      - total_amount
      - updated_at
    PurchaseMethodEnum:
      enum:
      - online
      - in_person
      - box_office
      - phone
      - mobile_app
      type: string
      description: |-
        * `online` - Online
        * `in_person` - In Person
        * `box_office` - Box Office
        * `phone` - Phone
        * `mobile_app` - Mobile App
    Qualification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    Rehearsal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
        notes:
          type: string
          description: Rehearsal Notes, e.g. what scene are being rehearsed, what
            is needed, etc. Support Markdown formatting.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production:
          type: integer
        venue:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - end_datetime
      - id
      - production
      - start_datetime
      - tenant
      - updated_at
    RehearsalParticipant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        is_required:
          type: boolean
          description: Indicates if the participant is required for this rehearsal
            (as some members may be added to a rehearsal but not be required to attend).
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        rehearsal:
          type: integer
        member:
          type: integer
      required:
      - created_at
      - created_by
      - id
      - member
      - rehearsal
      - tenant
      - updated_at
    Reimbursement:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        approved_date_time:
          type: string
          format: date-time
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,30}(?:\.\d{0,2})?$
        scheduled_date:
          type:
          - string
          - 'null'
          format: date
        processed_date:
          type:
          - string
          - 'null'
          format: date
        status:
          $ref: '#/components/schemas/ReimbursementStatusEnum'
        payment_reference:
          type: string
          maxLength: 100
        notes:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        payee:
          type:
          - integer
          - 'null'
        approver:
          type:
          - integer
          - 'null'
        expense:
          type:
          - integer
          - 'null'
      required:
      - amount
      - created_at
      - created_by
      - id
      - tenant
      - updated_at
    ReimbursementStatusEnum:
      enum:
      - pending
      - processing
      - completed
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `cancelled` - Cancelled
    Role:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        description:
          type: string
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        parent:
          type:
          - integer
          - 'null'
        permissions:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_at
      - id
      - name
      - permissions
      - tenant
      - updated_at
    RoleEnum:
      enum:
      - actor
      - cast
      - crew
      - choreographer
      - assistant_choreographer
      - costume_designer
      - assistant_costume_designer
      - designer
      - director
      - assistant_director
      - lighting_designer
      - assistant_lighting_designer
      - lighting_operator
      - assistant_lighting_operator
      - producer
      - assistant_producer
      - prod_manager
      - musician
      - set_designer
      - assistant_set_designer
      - sound_designer
      - assistant_sound_designer
      - sound_operator
      - assistant_sound_operator
      - stage_manager
      - assistant_stage_manager
      - deputy_stage_manager
      - technician
      - volunteer
      type: string
      description: |-
        * `actor` - Actor
        * `cast` - Cast Member
        * `crew` - Crew Member
        * `choreographer` - Choreographer
        * `assistant_choreographer` - Assistant Choreographer
        * `costume_designer` - Costume Designer
        * `assistant_costume_designer` - Assistant Costume Designer
        * `designer` - Designer
        * `director` - Director
        * `assistant_director` - Assistant Director
        * `lighting_designer` - Lighting Designer
        * `assistant_lighting_designer` - Assistant Lighting Designer
        * `lighting_operator` - Lighting Operator
        * `assistant_lighting_operator` - Assistant Lighting Operator
        * `producer` - Producer
        * `assistant_producer` - Assistant Producer
        * `prod_manager` - Production Manager
        * `musician` - Musician
        * `set_designer` - Set Designer
        * `assistant_set_designer` - Assistant Set Designer
        * `sound_designer` - Sound Designer
        * `assistant_sound_designer` - Assistant Sound Designer
        * `sound_operator` - Sound Operator
        * `assistant_sound_operator` - Assistant Sound Operator
        * `stage_manager` - Stage Manager
        * `assistant_stage_manager` - Assistant Stage Manager
        * `deputy_stage_manager` - Deputy Stage Manager
        * `technician` - Technician
        * `volunteer` - Volunteer
    RolePermission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        role:
          type: integer
        permission:
          type: integer
        context:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - id
      - permission
      - role
      - tenant
      - updated_at
    SeatingSystemEnum:
      enum:
      - none
      - seated
      type: string
      description: |-
        * `none` - General Admission
        * `seated` - Reserved Seating
    Section:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        section_code:
          type: string
          description: 'Section Code, example: L-MEZ, ORCH, R-BALC, etc.'
          maxLength: 20
        name:
          type: string
          description: 'Section Name, example: Left Mezzanine, Orchestra, Right Balcony,
            etc.'
          maxLength: 100
        floor:
          type: string
          description: 'Floor level, example: Ground, 2nd Floor, etc.'
          maxLength: 20
        description:
          type: string
          description: Description of the section, if any.
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Sort order for displaying sections, lower numbers appear first.
        seating_system:
          allOf:
          - $ref: '#/components/schemas/SeatingSystemEnum'
          description: |-
            Seating system for the section, e.g., General Admission, Reserved Seating.

            * `none` - General Admission
            * `seated` - Reserved Seating
        limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Maximum number of seats available in this section. null means
            unlimited. 0 means no seats available. Required for General Admission
            sections, ignored for Reserved Seating sections.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production_venue:
          type: integer
          description: The production & venue this section belongs to
      required:
      - created_at
      - created_by
      - id
      - name
      - production_venue
      - section_code
      - tenant
      - updated_at
    SectionSeat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        section:
          allOf:
          - $ref: '#/components/schemas/Section'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        seat_code:
          type: string
          description: 'Seat Code, example: 1, 2, 3 etc. This should be unique within
            the row.'
          maxLength: 20
        row:
          type: string
          description: 'Row identifier for the seat, example: A, B, C, etc.'
          maxLength: 10
        notes:
          type: string
          description: Additional notes about the seat, if any.
        obstructed_view:
          type: boolean
          description: Indicates if the seat has an obstructed view. True if obstructed,
            False otherwise. Add obstruction notes in the notes field.
        display_x_position:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: X position for display purposes, used for layout rendering.
        display_y_position:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Y position for display purposes, used for layout rendering.
        accessible:
          type: boolean
          description: Indicates if the seat is accessible for individuals with disabilities.
            Include accessibility notes in the notes field.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - row
      - seat_code
      - section
      - tenant
      - updated_at
    ServerMeta:
      type: object
      properties:
        version:
          type: string
        status:
          type: string
        reference:
          type: string
      required:
      - reference
      - status
      - version
    SessionStatus:
      type: object
      properties:
        status:
          type: string
        user:
          type: integer
      required:
      - status
    Signup:
      type: object
      description: Serializer for the Signup model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        first_name:
          type:
          - string
          - 'null'
          description: First name of the user signing up
          maxLength: 255
        last_name:
          type:
          - string
          - 'null'
          description: Last name of the user signing up
          maxLength: 255
        email:
          type:
          - string
          - 'null'
          format: email
          description: Email address of the user signing up
          maxLength: 254
        phone:
          type:
          - string
          - 'null'
          description: Phone number of the user signing up
          maxLength: 20
        notes:
          type:
          - string
          - 'null'
          description: Notes for the signup. Supports markdown.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        slot:
          type: integer
        user:
          type:
          - integer
          - 'null'
          description: If the participant has an account, this will be set to the
            user. If not, it will be null and the first_name, last_name, email, and
            phone fields will be used to identify the participant.
      required:
      - created_at
      - created_by
      - id
      - slot
      - tenant
      - updated_at
    Slot:
      type: object
      description: Serializer for the Slot model.
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type:
          - string
          - 'null'
          description: Name of the slot
          maxLength: 255
        start_time:
          type: string
          format: date-time
          description: Start time of the slot
        end_time:
          type: string
          format: date-time
          description: End time of the slot
        limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Limit of participants who can register for the slot. Leave
            null/none to disable limit.
        notes:
          type:
          - string
          - 'null'
          description: Notes for the slot. Supports markdown.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        audition:
          type: integer
      required:
      - audition
      - created_at
      - created_by
      - end_time
      - id
      - start_time
      - tenant
      - updated_at
    State:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        code:
          type: string
          description: Abbreviation or code for the state/region
          maxLength: 10
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        country:
          type: integer
      required:
      - country
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    Subfolder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        repo:
          type: integer
      required:
      - id
      - name
      - repo
    Submission:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        submitted_date_time:
          type: string
          format: date-time
          readOnly: true
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        form:
          type: integer
        member:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - form
      - id
      - submitted_date_time
      - tenant
      - updated_at
    SubmissionFieldValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        text_data:
          type: string
        number_data:
          type:
          - string
          - 'null'
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,5})?$
        date_data:
          type:
          - string
          - 'null'
          format: date
        datetime_data:
          type:
          - string
          - 'null'
          format: date-time
        time_data:
          type:
          - string
          - 'null'
          format: time
        choice_data:
          type: string
          description: Stores selected choices for multi-choice fields as a comma-separated
            string.
        phone_data:
          type:
          - string
          - 'null'
          maxLength: 20
        url_data:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 500
        email_data:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        file_uri:
          type:
          - string
          - 'null'
          format: uri
          description: URI of the uploaded file, if applicable. Signature fields will
            store the signature image URI here.
          maxLength: 500
        boolean_data:
          type: boolean
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        submission:
          type: integer
        form_field:
          type: integer
      required:
      - created_at
      - created_by
      - form_field
      - id
      - submission
      - tenant
      - updated_at
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 50
        colour:
          type:
          - string
          - 'null'
          description: 'Hex colour code without the # symbol'
          maxLength: 6
        description:
          type:
          - string
          - 'null'
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    Ticket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        section_seat:
          allOf:
          - $ref: '#/components/schemas/SectionSeat'
          readOnly: true
        ticket_type:
          allOf:
          - $ref: '#/components/schemas/TicketType'
          readOnly: true
        purchase:
          allOf:
          - $ref: '#/components/schemas/Purchase'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        ticket_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the ticket, used for tracking and validation.
        status:
          allOf:
          - $ref: '#/components/schemas/TicketStatusEnum'
          description: |-
            Current status of the ticket.

            * `active` - Active
            * `used` - Used
            * `refunded` - Refunded
            * `cancelled` - Cancelled
            * `transferred` - Transferred
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price of the ticket at the time of purchase.
        checked_in_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Timestamp when the ticket was checked in. Null if not checked
            in.
        checked_in_by_alias:
          type: string
          description: Alias used by the user who checked in the ticket. Useful for
            tracking check-ins by staff or volunteers who may not have a user account,
            or integrations which use a system account.
          maxLength: 100
        checked_in_location:
          type: string
          description: Location where the ticket was checked in. Useful for tracking
            check-ins at different points of entry or systems.
          maxLength: 200
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        performance:
          type: integer
          description: The performance for which this ticket is valid.
        section:
          type: integer
          description: The section for this ticket
        seat:
          type:
          - integer
          - 'null'
          description: The specific seat for this ticket.
        checked_in_by_user:
          type:
          - integer
          - 'null'
          description: User who checked in the ticket. Null if not checked in.
      required:
      - created_at
      - created_by
      - id
      - performance
      - price
      - purchase
      - section
      - section_seat
      - tenant
      - ticket_type
      - ticket_uuid
      - updated_at
    TicketStatusEnum:
      enum:
      - active
      - used
      - refunded
      - cancelled
      - transferred
      type: string
      description: |-
        * `active` - Active
        * `used` - Used
        * `refunded` - Refunded
        * `cancelled` - Cancelled
        * `transferred` - Transferred
    TicketType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        external_name:
          type: string
          description: Name of the ticket type, e.g., General Admission, VIP, etc.
          maxLength: 100
        internal_name:
          type: string
          description: Internal name for the ticket type, used for system references.
          maxLength: 100
        description:
          type: string
          description: Description of the ticket type, if any.
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price of the ticket type.
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          description: |-
            Currency for the ticket price, e.g. AUD, USD, EUR, etc.

            * `AUD` - AUD - Australian Dollar
            * `CAD` - CAD - Canadian Dollar
            * `EUR` - EUR - Euro
            * `GBP` - GBP - British Pound
            * `JPY` - JPY - Japanese Yen
            * `NZD` - NZD - New Zealand Dollar
            * `USD` - USD - United States Dollar
        limit:
          type:
          - integer
          - 'null'
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Maximum number of tickets available for this type. null means
            unlimited. 0 means no tickets available.
        sort_order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Sort order for displaying ticket types, lower numbers appear
            first.
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        production_venue:
          type: integer
          description: The production venue this ticket type belongs to.
      required:
      - created_at
      - created_by
      - external_name
      - id
      - internal_name
      - price
      - production_venue
      - tenant
      - updated_at
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type:
          - string
          - 'null'
          format: date-time
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        date_joined:
          type: string
          format: date-time
        ulid:
          type:
          - string
          - 'null'
          maxLength: 26
        user_sso_id:
          type:
          - string
          - 'null'
          maxLength: 255
        first_name:
          type: string
          maxLength: 255
        last_name:
          type:
          - string
          - 'null'
          maxLength: 255
        date_of_birth:
          type:
          - string
          - 'null'
          format: date
        email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        phone:
          type:
          - string
          - 'null'
          maxLength: 25
        is_active:
          type: boolean
        tenant:
          type: integer
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - first_name
      - id
      - password
      - tenant
      - username
    UserRoleAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
        updated_by:
          type:
          - integer
          - 'null'
        user:
          type: integer
        role:
          type: integer
      required:
      - created_at
      - id
      - role
      - tenant
      - updated_at
      - user
    Vendor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 255
        address:
          type:
          - string
          - 'null'
          maxLength: 255
        notes:
          type: string
        contact_name:
          type:
          - string
          - 'null'
          maxLength: 255
        contact_email:
          type:
          - string
          - 'null'
          format: email
          maxLength: 254
        contact_phone:
          type:
          - string
          - 'null'
          maxLength: 20
        website:
          type:
          - string
          - 'null'
          format: uri
          maxLength: 200
        abn:
          type:
          - string
          - 'null'
          maxLength: 255
        payment_terms:
          type:
          - string
          - 'null'
          maxLength: 255
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    Venue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        address:
          $ref: '#/components/schemas/Address'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the venue
          maxLength: 255
        notes:
          type: string
          description: Additional notes about the venue
        contact_name:
          type: string
          description: Contact person for the venue
          maxLength: 100
        contact_email:
          type: string
          format: email
          description: Email address for the venue contact
          maxLength: 254
        contact_phone:
          type: string
          description: Contact person for the venue contact
          maxLength: 128
        is_active:
          type: boolean
          description: Is the venue currently active?
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        tags:
          type: array
          items:
            type: integer
          readOnly: true
          description: Tags associated with the venue
      required:
      - address
      - created_at
      - created_by
      - id
      - name
      - tags
      - tenant
      - updated_at
    VenueCapacity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        seating_mode:
          type: string
          description: Seating mode of the venue
          maxLength: 100
        capacity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Total seating capacity of the venue in this mode
        notes:
          type: string
          description: Additional notes about the capacity
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        venue:
          type: integer
          description: Venue for which the capacity is defined
      required:
      - capacity
      - created_at
      - created_by
      - id
      - seating_mode
      - tenant
      - updated_at
      - venue
    VenueTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          description: Name of the tag
          maxLength: 100
        description:
          type: string
          description: Description of the tag
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
      required:
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    VenueTagAssignment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        venue:
          type: integer
          description: Venue to which the tag is assigned
        tag:
          type: integer
          description: Tag assigned to the venue
      required:
      - created_at
      - created_by
      - id
      - tag
      - tenant
      - updated_at
      - venue
    WorkLocation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        archive_at:
          type:
          - string
          - 'null'
          format: date-time
        name:
          type: string
          maxLength: 100
        tenant:
          type: integer
        created_by:
          type:
          - integer
          - 'null'
          readOnly: true
        updated_by:
          type:
          - integer
          - 'null'
        address:
          type: integer
      required:
      - address
      - created_at
      - created_by
      - id
      - name
      - tenant
      - updated_at
    FileType:
      type: string
      enum:
      - image
      - document
      - video
      - audio
      - all
      title: FileType
      description: Available file types for upload fields
    ExternalSignatureService:
      type: string
      enum:
      - dropboxsign
      - docusign
      - adobe
      - juro
      - signnow
      - pandadoc
      - zoho
      - custom
      title: ExternalSignatureService
      description: Available external signature services
    ShortTextConfig:
      properties:
        max_length:
          default: 255
          description: Maximum length of the text
          maximum: 1000
          title: Max Length
          type: integer
        min_length:
          default: 0
          description: Minimum length of the text
          minimum: 0
          title: Min Length
          type: integer
        lines:
          default: 1
          description: Number of lines for the text input
          title: Lines
          type: integer
        pattern:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Regex pattern for validation
          title: Pattern
      title: ShortTextConfig
      type: object
    LongTextConfig:
      properties:
        max_length:
          default: 5000
          description: Maximum length of the text
          maximum: 10000
          title: Max Length
          type: integer
        min_length:
          default: 0
          description: Minimum length of the text
          minimum: 0
          title: Min Length
          type: integer
        lines:
          default: 3
          description: Number of lines for the text input
          title: Lines
          type: integer
        rich_text:
          default: false
          description: Whether rich text formatting is allowed
          title: Rich Text
          type: boolean
      title: LongTextConfig
      type: object
    MultiChoiceConfig:
      properties:
        options:
          description: List of options for the multiple choice field
          items:
            type: string
          minItems: 1
          title: Options
          type: array
        allow_multiple:
          default: false
          description: Whether multiple selections are allowed
          title: Allow Multiple
          type: boolean
        allow_other:
          default: false
          description: Whether an 'Other' option is allowed for custom input
          title: Allow Other
          type: boolean
        other_placeholder:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Placeholder text for the 'Other' input field
          title: Other Placeholder
      required:
      - options
      title: MultiChoiceConfig
      type: object
    NumberConfig:
      properties:
        min_value:
          anyOf:
          - minimum: 0
            type: number
          - type: 'null'
          default: null
          description: Minimum value allowed
          title: Min Value
        max_value:
          anyOf:
          - maximum: 1000000
            type: number
          - type: 'null'
          default: null
          description: Maximum value allowed
          title: Max Value
        step:
          default: 1.0
          description: Step increment for the number input
          exclusiveMinimum: 0
          title: Step
          type: number
      title: NumberConfig
      type: object
    DecimalNumberConfig:
      properties:
        min_value:
          anyOf:
          - minimum: 0.0
            type: number
          - type: string
          - type: 'null'
          default: null
          description: Minimum value allowed
          title: Min Value
        max_value:
          anyOf:
          - maximum: 1000000.0
            type: number
          - type: string
          - type: 'null'
          default: null
          description: Maximum value allowed
          title: Max Value
        step:
          default: 0.01
          description: Step increment for the decimal number input
          exclusiveMinimum: 0
          title: Step
          type: number
        decimal_places:
          anyOf:
          - maximum: 6
            minimum: 0
            type: integer
          - type: 'null'
          default: 2
          description: Number of decimal places allowed
          title: Decimal Places
      title: DecimalNumberConfig
      type: object
    InfoConfig:
      properties:
        content:
          description: Content to display in the information field
          title: Content
          type: string
      required:
      - content
      title: InfoConfig
      type: object
    FileConfig:
      $defs:
        FileType:
          enum:
          - image
          - document
          - video
          - audio
          - all
          title: FileType
          type: string
      properties:
        allowed_file_types:
          description: List of allowed file types (e.g., 'image', 'document', 'video',
            'audio', 'all')
          items:
            $ref: '#/components/schemas/FileType'
          title: Allowed File Types
          type: array
        max_file_size:
          default: 10485760
          description: Maximum file size in bytes (default is 10MB, cannot be more
            than 100MB)
          maximum: 104857600
          minimum: 0
          title: Max File Size
          type: integer
        allow_multiple:
          default: false
          description: Whether multiple file uploads are allowed
          title: Allow Multiple
          type: boolean
      title: FileConfig
      type: object
    SliderConfig:
      properties:
        min_value:
          anyOf:
          - minimum: 0.0
            type: number
          - type: string
          default: 0.0
          description: Minimum value for the slider
          title: Min Value
        max_value:
          anyOf:
          - maximum: 1000.0
            type: number
          - type: string
          default: 10.0
          description: Maximum value for the slider
          title: Max Value
        step:
          anyOf:
          - exclusiveMinimum: 0.0
            type: number
          - type: string
          default: 1.0
          description: Step increment for the slider
          title: Step
      title: SliderConfig
      type: object
    DateConfig:
      properties:
        min_date:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          description: Minimum date allowed in YYYY-MM-DD format
          title: Min Date
        max_date:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          description: Maximum date allowed in YYYY-MM-DD format
          title: Max Date
      title: DateConfig
      type: object
    TimeConfig:
      properties:
        min_time:
          anyOf:
          - format: time
            type: string
          - type: 'null'
          default: null
          description: Minimum time allowed in HH:MM format
          title: Min Time
        max_time:
          anyOf:
          - format: time
            type: string
          - type: 'null'
          default: null
          description: Maximum time allowed in HH:MM format
          title: Max Time
      title: TimeConfig
      type: object
    DatetimeConfig:
      properties:
        min_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          description: Minimum date and time allowed in ISO format
          title: Min Datetime
        max_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          description: Maximum date and time allowed in ISO format
          title: Max Datetime
      title: DateTimeConfig
      type: object
    EmailConfig:
      properties:
        allowed_domains:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          description: List of allowed email domains (e.g., ['example.com', 'test.com'])
          title: Allowed Domains
      title: EmailConfig
      type: object
    PhoneConfig:
      properties:
        allowed_countries:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          description: List of allowed country codes for phone numbers (e.g., ['US',
            'IN'])
          title: Allowed Countries
      title: PhoneConfig
      type: object
    UrlConfig:
      properties:
        allowed_schemes:
          default:
          - http
          - https
          description: List of allowed URL schemes (e.g., ['http', 'https'])
          items:
            type: string
          title: Allowed Schemes
          type: array
        allow_custom_schemes:
          default: false
          description: Whether to allow custom URL schemes
          title: Allow Custom Schemes
          type: boolean
      title: URLConfig
      type: object
    CheckboxConfig:
      properties:
        label:
          description: Label for the checkbox
          title: Label
          type: string
        is_checked:
          default: false
          description: Whether the checkbox is checked by default
          title: Is Checked
          type: boolean
      required:
      - label
      title: CheckboxConfig
      type: object
    SectionHeaderConfig:
      properties:
        title:
          default: null
          description: Title of the section
          title: Title
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Description of the section
          title: Description
      title: SectionConfig
      type: object
    RatingConfig:
      properties:
        max_rating:
          default: 5
          description: Maximum rating value (default is 5, can be between 1 and 10)
          maximum: 10
          minimum: 1
          title: Max Rating
          type: integer
        allow_half_stars:
          default: false
          description: Whether to allow half-star ratings
          title: Allow Half Stars
          type: boolean
      title: RatingConfig
      type: object
    SignatureConfig:
      properties:
        allow_drawing:
          default: true
          description: Whether users can draw their signature
          title: Allow Drawing
          type: boolean
        allow_upload:
          default: false
          description: Whether users can upload an image of their signature
          title: Allow Upload
          type: boolean
        allow_typing:
          default: false
          description: Whether users can type their signature
          title: Allow Typing
          type: boolean
        max_file_size:
          default: 5242880
          description: Maximum file size for uploaded signatures in bytes (default
            is 5MB, cannot be more than 10MB)
          maximum: 10485760
          minimum: 0
          title: Max File Size
          type: integer
      title: SignatureConfig
      type: object
    ExternalSignatureConfig:
      $defs:
        ExternalSignatureService:
          enum:
          - dropboxsign
          - docusign
          - adobe
          - juro
          - signnow
          - pandadoc
          - zoho
          - custom
          title: ExternalSignatureService
          type: string
      properties:
        service:
          $ref: '#/components/schemas/ExternalSignatureService'
          description: External signature service to use (e.g., 'dropboxsign', 'docusign',
            'adobe', etc.)
        service_url:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: URL of the external signature service (if applicable)
          title: Service Url
        form_id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Form ID for the external signature service (if required)
          title: Form Id
        template_id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Template ID for the external signature service (if required)
          title: Template Id
        client_id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Client ID for the external signature service (if required)
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Client secret for the external signature service (if required)
          title: Client Secret
        api_key:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: API key for the external signature service (if required)
          title: Api Key
        allow_drawing:
          default: true
          description: Whether users can draw their signature using the external service
          title: Allow Drawing
          type: boolean
        allow_upload:
          default: false
          description: Whether users can upload an image of their signature using
            the external service
          title: Allow Upload
          type: boolean
        allow_typing:
          default: false
          description: Whether users can type their signature using the external service
          title: Allow Typing
          type: boolean
      required:
      - service
      title: ExternalSignatureConfig
      type: object
  securitySchemes:
    CadenceSession:
      type: apiKey
      in: cookie
      name: sessionid
      description: Authenticated via browser session cookie after OIDC login at `/oidc/authenticate/`
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- url: http://localhost:8000
  description: Local Development Server
- url: https://api.limelight.keja.co
  description: Production Server
externalDocs:
  description: Limelight Documentation
  url: https://docs.limelight.keja.co/
